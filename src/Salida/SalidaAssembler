option casemap :none
include \masm32\include\masm32rt.inc
includelib \masm32\lib\kernel32.lib
includelib \masm32\lib\masm32.lib
.STACK 200h

.DATA
errorMsgOverflow db "Overflow: en suma!.", 10, 0 ;
errorMsgConversionNegativa db "Conversion invalida: no puede convertir un Single negativo a Entero!.", 10, 0 ;
errorMsgRestaNegativa db "Resta invalida: resultado negativo!.", 10, 0 ;
d_global DD ? 
_cadena0_ DB "HOLA MUNDO", 10, 0
_float0_ DD 2.025s+10
z_global DW ? 
x_global DW ? 
y_global DW ? 
v_global DW ? 
u_global DW ? 
@aux6 DW ? 
@aux5 DW ? 
@aux4 DW ? 
@aux3 DW ? 
@aux2 DW ? 
@aux1 DW ? 

.CODE
START:
FLD _float0_
FST d_global
invoke StdOut, addr _cadena0_
MOV CX, 0 
MOV AX, x_global
CMP AX, z_global
SETBE CL
MOV CH, 0 
MOV @aux1, CX
MOV CX, 0 
MOV AX, y_global
CMP AX, u_global
SETBE CL
MOV CH, 0 
MOV @aux2, CX
MOV CX, 0 
MOV AX, @aux1
AND AX, @aux2
CMP AX, 0
SETNZ CL
MOV CH, 0 
MOV @aux3, CX
CMP @aux3, 0
JE ET13
MOV AX, x_global
ADD AX, y_global
JC ??errorOverflow
MOV @aux4, AX
MOV AX, @aux4
ADD AX, u_global
JC ??errorOverflow
MOV @aux5, AX
MOV AX, @aux5
MOV z_global, AX
MOV CX, 0 
FLD d_global
FLD d_global
FCOM ST(1)
FSTSW AX
SAHF
SETZ  CL
MOV CH, 0 
MOV @aux6, CX
CMP @aux6, 0
JE ET12
invoke StdOut, addr _cadena0_
ET12:
ET13:
JMP END_START
??errorOverflow:
invoke StdOut, addr errorMsgOverflow
JMP END_START
??errorConversionNegativo:
invoke StdOut, addr errorMsgConversionNegativa
JMP END_START
??errorRestaNegativa:
invoke StdOut, addr errorMsgRestaNegativa
END_START: 
END START
