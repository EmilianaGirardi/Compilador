
  MOV AX, 1
  MOV x_global, AX

  MOV AX, x_global
  MOV funcion1_global@param, AX
  CALL funcion1_global
  MOV @aux7, AX

  MOV AX, @aux7
  MOV y_global, AX

  invoke StdOut, addr _cadena5_

  MOV CX, 0 
  MOV AX, y_global
  CMP AX, 50
  SETB CL
  MOV CH, 0 
  MOV @aux8, CX

  CMP @aux8, 0
  JE ET31

  invoke StdOut, addr _cadena0_

  JMP ET33

  ET31:

  invoke StdOut, addr _cadena1_

  ET33:

  JMP END_START

  ??errorOverflow:
    invoke StdOut, addr errorMsgOverflow
    JMP END_START

  ??errorConversionNegativo:
    invoke StdOut, addr errorMsgConversionNegativa
    JMP END_START

  ??errorRestaNegativa:
    invoke StdOut, addr errorMsgRestaNegativa

END_START: 
invoke ExitProcess, 0
END START