MOV AX, 5
MOV x_global, AX

MOV AX, 45
MOV y_global, AX

MOV AX, 59
MOV z_global, AX

MOV AX, 84
MOV i_global, AX

MOV AX, 95
MOV j_global, AX

MOV AX, 105
MOV k_global, AX

MOV CX, 0 
MOV AX, z_global
CMP AX, 80
SETB CL
MOV CH, 0 
MOV @aux1, CX

CMP @aux1, 0
JE ET21

ET8:

MOV AX, y_global
SUB AX, 5
JS ??errorRestaNegativa
MOV @aux2, AX

MOV AX, @aux2
MOV y_global, AX

MOV CX, 0 
MOV AX, y_global
CMP AX, 25
SETBE CL
MOV CH, 0 
MOV @aux3, CX

CMP @aux3, 0
JE ET15

invoke StdOut, addr _cadena2_

JMP salir@_global

ET15:

MOV AX, x_global
ADD AX, 5
JC ??errorOverflow
MOV @aux4, AX

MOV AX, @aux4
MOV x_global, AX

invoke StdOut, addr _cadena0_

MOV CX, 0 
MOV  AX, x_global
CMP AX, 25
SETA CL
MOV CH, 0 
MOV @aux5, CX

CMP @aux5, 0
JE ET8

ET21:

MOV AX, 05
MOV var_global, AX

MOV AX, x_global
ADD AX, 25
JC ??errorOverflow
MOV @aux6, AX

MOV AX, @aux6
MOV x_global, AX

salir@_global:

invoke StdOut, addr _cadena1_

MOV AX, 10
MOV x_global, AX

JMP END_START

??errorOverflow:
invoke StdOut, addr errorMsgOverflow
JMP END_START

??errorConversionNegativo:
invoke StdOut, addr errorMsgConversionNegativa
JMP END_START

??errorRestaNegativa:
invoke StdOut, addr errorMsgRestaNegativa

END_START: 
END START