FDL _float0_
FST d.global
MOV CX, 0 
MOV x.global, AX
CMP AX, z.global
SETBE CL
MOV @aux1, CL
MOV CX, 0 
MOV y.global, AX
CMP AX, u.global
SETBE CL
MOV @aux2, CL
MOV @aux1, AX
AND AX, @aux2
CMP AX, 0
SETNZ @aux3
CMP @aux3, 0
JE ET8
MOV AX, x.global
ADD AX, y.global
JC ??errorOverflow
MOV @aux4, AX
MOV AX, @aux4
ADD AX, u.global
JC ??errorOverflow
MOV @aux5, AX
MOV AX, @aux5
MOV z.global, AX
ET8:
J END_START
??errorOverflow:
invoke StdOut, addr errorMsgOverflow
J END_START
??errorConversionNegativo
invoke StdOut, addr errorMsgConversionNegativa
J END_START
??errorRestaNegativa
invoke StdOut, addr errorMsgRestaNegativa
END START