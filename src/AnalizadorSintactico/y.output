   0  $accept : programa $end

   1  programa : ID BEGIN conjunto_sentencias END ';'
   2           | BEGIN conjunto_sentencias END ';'
   3           | ID conjunto_sentencias END ';'

   4  conjunto_sentencias : declarativa ';'
   5                      | declarativa
   6                      | ejecutable ';'
   7                      | ejecutable
   8                      | conjunto_sentencias declarativa ';'
   9                      | conjunto_sentencias declarativa
  10                      | conjunto_sentencias ejecutable ';'
  11                      | conjunto_sentencias ejecutable

  12  ejecutable : sentencia_if
  13             | invocacion_fun
  14             | asig
  15             | repeat_until
  16             | goto
  17             | salida

  18  bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END
  19                                | BEGIN sentencias_ejecutables retorno END
  20                                | BEGIN retorno END

  21  sentencias_ejecutables : ejecutable ';'
  22                         | sentencias_ejecutables ejecutable ';'
  23                         | ejecutable
  24                         | sentencias_ejecutables ejecutable

  25  declarativa : declaracionFun
  26              | declarvar
  27              | def_triple
  28              | declar_compuesto

  29  declarvar : tipo lista_var

  30  declar_compuesto : ID lista_var

  31  lista_var : ID
  32            | lista_var ',' ID

  33  tipo : TIPO_OCTAL
  34       | TIPO_UNSIGNED
  35       | TIPO_SINGLE

  36  declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno END
  37                 | tipo FUN ID '(' parametro ')' BEGIN retorno END
  38                 | tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias END
  39                 | tipo FUN '(' parametro ')' BEGIN conjunto_sentencias retorno END
  40                 | tipo FUN '(' parametro ')' BEGIN retorno END
  41                 | tipo FUN ID '(' ')' BEGIN conjunto_sentencias retorno END
  42                 | tipo FUN ID '(' ')' BEGIN retorno END

  43  parametro : tipo ID
  44            | tipo
  45            | ID

  46  retorno : RET '(' exp_arit ')' ';'

  47  invocacion_fun : ID '(' exp_arit ')'
  48                 | ID '(' tipo '(' exp_arit ')' ')'
  49                 | ID '(' ')'

  50  exp_arit : exp_arit '+' termino
  51           | exp_arit '-' termino
  52           | exp_arit '+' error ';'
  53           | exp_arit '-' error ';'
  54           | termino

  55  lista_exp_arit : exp_arit
  56                 | lista_exp_arit ',' exp_arit

  57  termino : termino '*' factor
  58          | termino '/' factor
  59          | factor
  60          | termino '*' error ';'
  61          | termino '/' error ';'

  62  factor : ID
  63         | constante
  64         | invocacion_fun
  65         | triple

  66  triple : ID '{' ENTERO_UNSIGNED '}'

  67  asig : ID ASIGNACION exp_arit
  68       | triple ASIGNACION exp_arit

  69  constante : SINGLE_CONSTANTE
  70            | ENTERO_UNSIGNED
  71            | OCTAL

  72  etiqueta : ID '@'

  73  goto : GOTO etiqueta
  74       | GOTO error ';'

  75  salida : OUTF '(' MULTILINEA ')'
  76         | OUTF '(' exp_arit ") "
  77         | OUTF '(' ')'
  78         | OUTF '(' error ')'

  79  sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF
  80               | IF condicion THEN bloque_sentencias_ejecutables
  81               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF
  82               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables
  83               | IF condicion THEN END_IF
  84               | IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF

  85  condicion : '(' exp_arit comparador exp_arit ')'
  86            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  87            | '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'
  88            | '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'
  89            | '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  90            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'
  91            | exp_arit comparador exp_arit ')'
  92            | '(' exp_arit comparador exp_arit
  93            | '(' exp_arit exp_arit ')'
  94            | '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'
  95            | '(' '(' lista_exp_arit ')' ')'

  96  comparador : MAYORIGUAL
  97             | MENORIGUAL
  98             | DISTINTO
  99             | '='
 100             | '>'
 101             | '<'

 102  repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion
 103               | REPEAT UNTIL condicion
 104               | REPEAT bloque_sentencias_ejecutables condicion

 105  def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID

 106  tipo_compuesto : TRIPLE

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN conjunto_sentencias END ';'  (1)
	programa : ID . conjunto_sentencias END ';'  (3)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	BEGIN  shift 7
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 14
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 2
	programa : BEGIN . conjunto_sentencias END ';'  (2)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 29
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	declar_compuesto : ID . lista_var  (30)
	invocacion_fun : ID . '(' exp_arit ')'  (47)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (48)
	invocacion_fun : ID . '(' ')'  (49)
	triple : ID . '{' ENTERO_UNSIGNED '}'  (66)
	asig : ID . ASIGNACION exp_arit  (67)

	ID  shift 30
	ASIGNACION  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	lista_var  goto 34


state 5
	repeat_until : REPEAT . bloque_sentencias_ejecutables UNTIL condicion  (102)
	repeat_until : REPEAT . UNTIL condicion  (103)
	repeat_until : REPEAT . bloque_sentencias_ejecutables condicion  (104)

	BEGIN  shift 35
	UNTIL  shift 36
	.  error

	bloque_sentencias_ejecutables  goto 37


state 6
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables END_IF  (79)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables  (80)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (81)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (82)
	sentencia_if : IF . condicion THEN END_IF  (83)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE END_IF  (84)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	'('  shift 42
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 44
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48
	condicion  goto 49


state 7
	programa : ID BEGIN . conjunto_sentencias END ';'  (1)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 50
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 8
	salida : OUTF . '(' MULTILINEA ')'  (75)
	salida : OUTF . '(' exp_arit ") "  (76)
	salida : OUTF . '(' ')'  (77)
	salida : OUTF . '(' error ')'  (78)

	'('  shift 51
	.  error


state 9
	def_triple : TYPEDEF . tipo_compuesto '<' tipo '>' ID  (105)

	TRIPLE  shift 52
	.  error

	tipo_compuesto  goto 53


state 10
	goto : GOTO . etiqueta  (73)
	goto : GOTO . error ';'  (74)

	error  shift 54
	ID  shift 55
	.  error

	etiqueta  goto 56


state 11
	tipo : TIPO_UNSIGNED .  (34)

	.  reduce 34


state 12
	tipo : TIPO_SINGLE .  (35)

	.  reduce 35


state 13
	tipo : TIPO_OCTAL .  (33)

	.  reduce 33


state 14
	programa : ID conjunto_sentencias . END ';'  (3)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 57
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 15
	conjunto_sentencias : declarativa . ';'  (4)
	conjunto_sentencias : declarativa .  (5)

	';'  shift 60
	ID  reduce 5
	REPEAT  reduce 5
	IF  reduce 5
	END  reduce 5
	OUTF  reduce 5
	TYPEDEF  reduce 5
	RET  reduce 5
	GOTO  reduce 5
	TIPO_UNSIGNED  reduce 5
	TIPO_SINGLE  reduce 5
	TIPO_OCTAL  reduce 5


state 16
	conjunto_sentencias : ejecutable . ';'  (6)
	conjunto_sentencias : ejecutable .  (7)

	';'  shift 61
	ID  reduce 7
	REPEAT  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	GOTO  reduce 7
	TIPO_UNSIGNED  reduce 7
	TIPO_SINGLE  reduce 7
	TIPO_OCTAL  reduce 7


state 17
	ejecutable : sentencia_if .  (12)

	.  reduce 12


state 18
	ejecutable : invocacion_fun .  (13)

	.  reduce 13


state 19
	ejecutable : asig .  (14)

	.  reduce 14


state 20
	ejecutable : repeat_until .  (15)

	.  reduce 15


state 21
	ejecutable : goto .  (16)

	.  reduce 16


state 22
	ejecutable : salida .  (17)

	.  reduce 17


state 23
	declarativa : declaracionFun .  (25)

	.  reduce 25


state 24
	declarativa : declarvar .  (26)

	.  reduce 26


state 25
	declarativa : def_triple .  (27)

	.  reduce 27


state 26
	declarativa : declar_compuesto .  (28)

	.  reduce 28


state 27
	declarvar : tipo . lista_var  (29)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo . FUN '(' parametro ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo . FUN '(' parametro ')' BEGIN retorno END  (40)
	declaracionFun : tipo . FUN ID '(' ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo . FUN ID '(' ')' BEGIN retorno END  (42)

	ID  shift 30
	FUN  shift 62
	.  error

	lista_var  goto 63


state 28
	asig : triple . ASIGNACION exp_arit  (68)

	ASIGNACION  shift 64
	.  error


state 29
	programa : BEGIN conjunto_sentencias . END ';'  (2)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 65
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 30
	lista_var : ID .  (31)

	.  reduce 31


state 31
	asig : ID ASIGNACION . exp_arit  (67)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 66
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 32
	invocacion_fun : ID '(' . exp_arit ')'  (47)
	invocacion_fun : ID '(' . tipo '(' exp_arit ')' ')'  (48)
	invocacion_fun : ID '(' . ')'  (49)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 67
	.  error

	invocacion_fun  goto 43
	tipo  goto 68
	exp_arit  goto 69
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 33
	triple : ID '{' . ENTERO_UNSIGNED '}'  (66)

	ENTERO_UNSIGNED  shift 70
	.  error


state 34
	declar_compuesto : ID lista_var .  (30)
	lista_var : lista_var . ',' ID  (32)

	','  shift 71
	ID  reduce 30
	REPEAT  reduce 30
	IF  reduce 30
	END  reduce 30
	OUTF  reduce 30
	TYPEDEF  reduce 30
	RET  reduce 30
	GOTO  reduce 30
	TIPO_UNSIGNED  reduce 30
	TIPO_SINGLE  reduce 30
	TIPO_OCTAL  reduce 30
	';'  reduce 30


state 35
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables END  (18)
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables retorno END  (19)
	bloque_sentencias_ejecutables : BEGIN . retorno END  (20)

	ID  shift 72
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	RET  shift 73
	GOTO  shift 10
	.  error

	ejecutable  goto 74
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	sentencias_ejecutables  goto 75
	retorno  goto 76
	triple  goto 28


state 36
	repeat_until : REPEAT UNTIL . condicion  (103)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	'('  shift 42
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 44
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48
	condicion  goto 77


state 37
	repeat_until : REPEAT bloque_sentencias_ejecutables . UNTIL condicion  (102)
	repeat_until : REPEAT bloque_sentencias_ejecutables . condicion  (104)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	UNTIL  shift 78
	'('  shift 42
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 44
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48
	condicion  goto 79


state 38
	invocacion_fun : ID . '(' exp_arit ')'  (47)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (48)
	invocacion_fun : ID . '(' ')'  (49)
	factor : ID .  (62)
	triple : ID . '{' ENTERO_UNSIGNED '}'  (66)

	'('  shift 32
	'{'  shift 33
	MENORIGUAL  reduce 62
	ID  reduce 62
	DISTINTO  reduce 62
	MAYORIGUAL  reduce 62
	SINGLE_CONSTANTE  reduce 62
	ENTERO_UNSIGNED  reduce 62
	OCTAL  reduce 62
	REPEAT  reduce 62
	IF  reduce 62
	THEN  reduce 62
	END  reduce 62
	OUTF  reduce 62
	TYPEDEF  reduce 62
	RET  reduce 62
	GOTO  reduce 62
	TIPO_UNSIGNED  reduce 62
	TIPO_SINGLE  reduce 62
	TIPO_OCTAL  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'/'  reduce 62
	'*'  reduce 62
	';'  reduce 62
	','  reduce 62
	')'  reduce 62
	") "  reduce 62
	'='  reduce 62
	'>'  reduce 62
	'<'  reduce 62


state 39
	constante : SINGLE_CONSTANTE .  (69)

	.  reduce 69


state 40
	constante : ENTERO_UNSIGNED .  (70)

	.  reduce 70


state 41
	constante : OCTAL .  (71)

	.  reduce 71


state 42
	condicion : '(' . exp_arit comparador exp_arit ')'  (85)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (86)
	condicion : '(' . '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' . '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (88)
	condicion : '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (89)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (90)
	condicion : '(' . exp_arit comparador exp_arit  (92)
	condicion : '(' . exp_arit exp_arit ')'  (93)
	condicion : '(' . '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (94)
	condicion : '(' . '(' lista_exp_arit ')' ')'  (95)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	'('  shift 80
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 81
	termino  goto 45
	lista_exp_arit  goto 82
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 43
	factor : invocacion_fun .  (64)

	.  reduce 64


state 44
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : exp_arit . comparador exp_arit ')'  (91)

	MENORIGUAL  shift 83
	DISTINTO  shift 84
	MAYORIGUAL  shift 85
	'+'  shift 86
	'-'  shift 87
	'='  shift 88
	'>'  shift 89
	'<'  shift 90
	.  error

	comparador  goto 91


state 45
	exp_arit : termino .  (54)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)
	termino : termino . '*' error ';'  (60)
	termino : termino . '/' error ';'  (61)

	'/'  shift 92
	'*'  shift 93
	MENORIGUAL  reduce 54
	ID  reduce 54
	DISTINTO  reduce 54
	MAYORIGUAL  reduce 54
	SINGLE_CONSTANTE  reduce 54
	ENTERO_UNSIGNED  reduce 54
	OCTAL  reduce 54
	REPEAT  reduce 54
	IF  reduce 54
	THEN  reduce 54
	END  reduce 54
	OUTF  reduce 54
	TYPEDEF  reduce 54
	RET  reduce 54
	GOTO  reduce 54
	TIPO_UNSIGNED  reduce 54
	TIPO_SINGLE  reduce 54
	TIPO_OCTAL  reduce 54
	'+'  reduce 54
	'-'  reduce 54
	';'  reduce 54
	','  reduce 54
	')'  reduce 54
	") "  reduce 54
	'='  reduce 54
	'>'  reduce 54
	'<'  reduce 54


state 46
	termino : factor .  (59)

	.  reduce 59


state 47
	factor : constante .  (63)

	.  reduce 63


state 48
	factor : triple .  (65)

	.  reduce 65


state 49
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables END_IF  (79)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables  (80)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (81)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (82)
	sentencia_if : IF condicion . THEN END_IF  (83)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE END_IF  (84)

	THEN  shift 94
	.  error


state 50
	programa : ID BEGIN conjunto_sentencias . END ';'  (1)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 95
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 51
	salida : OUTF '(' . MULTILINEA ')'  (75)
	salida : OUTF '(' . exp_arit ") "  (76)
	salida : OUTF '(' . ')'  (77)
	salida : OUTF '(' . error ')'  (78)

	error  shift 96
	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	MULTILINEA  shift 97
	')'  shift 98
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 99
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 52
	tipo_compuesto : TRIPLE .  (106)

	.  reduce 106


state 53
	def_triple : TYPEDEF tipo_compuesto . '<' tipo '>' ID  (105)

	'<'  shift 100
	.  error


state 54
	goto : GOTO error . ';'  (74)

	';'  shift 101
	.  error


state 55
	etiqueta : ID . '@'  (72)

	'@'  shift 102
	.  error


state 56
	goto : GOTO etiqueta .  (73)

	.  reduce 73


state 57
	programa : ID conjunto_sentencias END . ';'  (3)

	';'  shift 103
	.  error


state 58
	conjunto_sentencias : conjunto_sentencias declarativa . ';'  (8)
	conjunto_sentencias : conjunto_sentencias declarativa .  (9)

	';'  shift 104
	ID  reduce 9
	REPEAT  reduce 9
	IF  reduce 9
	END  reduce 9
	OUTF  reduce 9
	TYPEDEF  reduce 9
	RET  reduce 9
	GOTO  reduce 9
	TIPO_UNSIGNED  reduce 9
	TIPO_SINGLE  reduce 9
	TIPO_OCTAL  reduce 9


state 59
	conjunto_sentencias : conjunto_sentencias ejecutable . ';'  (10)
	conjunto_sentencias : conjunto_sentencias ejecutable .  (11)

	';'  shift 105
	ID  reduce 11
	REPEAT  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	GOTO  reduce 11
	TIPO_UNSIGNED  reduce 11
	TIPO_SINGLE  reduce 11
	TIPO_OCTAL  reduce 11


state 60
	conjunto_sentencias : declarativa ';' .  (4)

	.  reduce 4


state 61
	conjunto_sentencias : ejecutable ';' .  (6)

	.  reduce 6


state 62
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo FUN . '(' parametro ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN . '(' parametro ')' BEGIN retorno END  (40)
	declaracionFun : tipo FUN . ID '(' ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN . ID '(' ')' BEGIN retorno END  (42)

	ID  shift 106
	'('  shift 107
	.  error


state 63
	declarvar : tipo lista_var .  (29)
	lista_var : lista_var . ',' ID  (32)

	','  shift 71
	ID  reduce 29
	REPEAT  reduce 29
	IF  reduce 29
	END  reduce 29
	OUTF  reduce 29
	TYPEDEF  reduce 29
	RET  reduce 29
	GOTO  reduce 29
	TIPO_UNSIGNED  reduce 29
	TIPO_SINGLE  reduce 29
	TIPO_OCTAL  reduce 29
	';'  reduce 29


state 64
	asig : triple ASIGNACION . exp_arit  (68)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 108
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 65
	programa : BEGIN conjunto_sentencias END . ';'  (2)

	';'  shift 109
	.  error


state 66
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	asig : ID ASIGNACION exp_arit .  (67)

	'+'  shift 86
	'-'  shift 87
	ID  reduce 67
	REPEAT  reduce 67
	IF  reduce 67
	END  reduce 67
	OUTF  reduce 67
	TYPEDEF  reduce 67
	RET  reduce 67
	GOTO  reduce 67
	TIPO_UNSIGNED  reduce 67
	TIPO_SINGLE  reduce 67
	TIPO_OCTAL  reduce 67
	';'  reduce 67


state 67
	invocacion_fun : ID '(' ')' .  (49)

	.  reduce 49


state 68
	invocacion_fun : ID '(' tipo . '(' exp_arit ')' ')'  (48)

	'('  shift 110
	.  error


state 69
	invocacion_fun : ID '(' exp_arit . ')'  (47)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 86
	'-'  shift 87
	')'  shift 111
	.  error


state 70
	triple : ID '{' ENTERO_UNSIGNED . '}'  (66)

	'}'  shift 112
	.  error


state 71
	lista_var : lista_var ',' . ID  (32)

	ID  shift 113
	.  error


state 72
	invocacion_fun : ID . '(' exp_arit ')'  (47)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (48)
	invocacion_fun : ID . '(' ')'  (49)
	triple : ID . '{' ENTERO_UNSIGNED '}'  (66)
	asig : ID . ASIGNACION exp_arit  (67)

	ASIGNACION  shift 31
	'('  shift 32
	'{'  shift 33
	.  error


state 73
	retorno : RET . '(' exp_arit ')' ';'  (46)

	'('  shift 114
	.  error


state 74
	sentencias_ejecutables : ejecutable . ';'  (21)
	sentencias_ejecutables : ejecutable .  (23)

	';'  shift 115
	ID  reduce 23
	REPEAT  reduce 23
	IF  reduce 23
	END  reduce 23
	OUTF  reduce 23
	RET  reduce 23
	GOTO  reduce 23


state 75
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . END  (18)
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . retorno END  (19)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable ';'  (22)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable  (24)

	ID  shift 72
	REPEAT  shift 5
	IF  shift 6
	END  shift 116
	OUTF  shift 8
	RET  shift 73
	GOTO  shift 10
	.  error

	ejecutable  goto 117
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 118
	triple  goto 28


state 76
	bloque_sentencias_ejecutables : BEGIN retorno . END  (20)

	END  shift 119
	.  error


state 77
	repeat_until : REPEAT UNTIL condicion .  (103)

	.  reduce 103


state 78
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL . condicion  (102)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	'('  shift 42
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 44
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48
	condicion  goto 120


state 79
	repeat_until : REPEAT bloque_sentencias_ejecutables condicion .  (104)

	.  reduce 104


state 80
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (86)
	condicion : '(' '(' . lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' '(' . lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (90)
	condicion : '(' '(' . lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (94)
	condicion : '(' '(' . lista_exp_arit ')' ')'  (95)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 121
	termino  goto 45
	lista_exp_arit  goto 122
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 81
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	lista_exp_arit : exp_arit .  (55)
	condicion : '(' exp_arit . comparador exp_arit ')'  (85)
	condicion : '(' exp_arit . comparador exp_arit  (92)
	condicion : '(' exp_arit . exp_arit ')'  (93)

	MENORIGUAL  shift 83
	ID  shift 38
	DISTINTO  shift 84
	MAYORIGUAL  shift 85
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	'+'  shift 86
	'-'  shift 87
	'='  shift 88
	'>'  shift 89
	'<'  shift 90
	','  reduce 55
	')'  reduce 55

	invocacion_fun  goto 43
	exp_arit  goto 123
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48
	comparador  goto 124


state 82
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (89)

	','  shift 125
	')'  shift 126
	.  error


state 83
	comparador : MENORIGUAL .  (97)

	.  reduce 97


state 84
	comparador : DISTINTO .  (98)

	.  reduce 98


state 85
	comparador : MAYORIGUAL .  (96)

	.  reduce 96


state 86
	exp_arit : exp_arit '+' . termino  (50)
	exp_arit : exp_arit '+' . error ';'  (52)

	error  shift 127
	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	termino  goto 128
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 87
	exp_arit : exp_arit '-' . termino  (51)
	exp_arit : exp_arit '-' . error ';'  (53)

	error  shift 129
	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	termino  goto 130
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 88
	comparador : '=' .  (99)

	.  reduce 99


state 89
	comparador : '>' .  (100)

	.  reduce 100


state 90
	comparador : '<' .  (101)

	.  reduce 101


state 91
	condicion : exp_arit comparador . exp_arit ')'  (91)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 131
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 92
	termino : termino '/' . factor  (58)
	termino : termino '/' . error ';'  (61)

	error  shift 132
	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	factor  goto 133
	constante  goto 47
	triple  goto 48


state 93
	termino : termino '*' . factor  (57)
	termino : termino '*' . error ';'  (60)

	error  shift 134
	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	factor  goto 135
	constante  goto 47
	triple  goto 48


state 94
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables END_IF  (79)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables  (80)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (81)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (82)
	sentencia_if : IF condicion THEN . END_IF  (83)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE END_IF  (84)

	BEGIN  shift 35
	END_IF  shift 136
	.  error

	bloque_sentencias_ejecutables  goto 137


state 95
	programa : ID BEGIN conjunto_sentencias END . ';'  (1)

	';'  shift 138
	.  error


state 96
	salida : OUTF '(' error . ')'  (78)

	')'  shift 139
	.  error


state 97
	salida : OUTF '(' MULTILINEA . ')'  (75)

	')'  shift 140
	.  error


state 98
	salida : OUTF '(' ')' .  (77)

	.  reduce 77


state 99
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	salida : OUTF '(' exp_arit . ") "  (76)

	'+'  shift 86
	'-'  shift 87
	") "  shift 141
	.  error


state 100
	def_triple : TYPEDEF tipo_compuesto '<' . tipo '>' ID  (105)

	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 142


state 101
	goto : GOTO error ';' .  (74)

	.  reduce 74


state 102
	etiqueta : ID '@' .  (72)

	.  reduce 72


state 103
	programa : ID conjunto_sentencias END ';' .  (3)

	.  reduce 3


state 104
	conjunto_sentencias : conjunto_sentencias declarativa ';' .  (8)

	.  reduce 8


state 105
	conjunto_sentencias : conjunto_sentencias ejecutable ';' .  (10)

	.  reduce 10


state 106
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo FUN ID . '(' ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID . '(' ')' BEGIN retorno END  (42)

	'('  shift 143
	.  error


state 107
	declaracionFun : tipo FUN '(' . parametro ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' . parametro ')' BEGIN retorno END  (40)

	ID  shift 144
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 145
	parametro  goto 146


state 108
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	asig : triple ASIGNACION exp_arit .  (68)

	'+'  shift 86
	'-'  shift 87
	ID  reduce 68
	REPEAT  reduce 68
	IF  reduce 68
	END  reduce 68
	OUTF  reduce 68
	TYPEDEF  reduce 68
	RET  reduce 68
	GOTO  reduce 68
	TIPO_UNSIGNED  reduce 68
	TIPO_SINGLE  reduce 68
	TIPO_OCTAL  reduce 68
	';'  reduce 68


state 109
	programa : BEGIN conjunto_sentencias END ';' .  (2)

	.  reduce 2


state 110
	invocacion_fun : ID '(' tipo '(' . exp_arit ')' ')'  (48)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 147
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 111
	invocacion_fun : ID '(' exp_arit ')' .  (47)

	.  reduce 47


state 112
	triple : ID '{' ENTERO_UNSIGNED '}' .  (66)

	.  reduce 66


state 113
	lista_var : lista_var ',' ID .  (32)

	.  reduce 32


state 114
	retorno : RET '(' . exp_arit ')' ';'  (46)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 148
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 115
	sentencias_ejecutables : ejecutable ';' .  (21)

	.  reduce 21


state 116
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END .  (18)

	.  reduce 18


state 117
	sentencias_ejecutables : sentencias_ejecutables ejecutable . ';'  (22)
	sentencias_ejecutables : sentencias_ejecutables ejecutable .  (24)

	';'  shift 149
	ID  reduce 24
	REPEAT  reduce 24
	IF  reduce 24
	END  reduce 24
	OUTF  reduce 24
	RET  reduce 24
	GOTO  reduce 24


state 118
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno . END  (19)

	END  shift 150
	.  error


state 119
	bloque_sentencias_ejecutables : BEGIN retorno END .  (20)

	.  reduce 20


state 120
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion .  (102)

	.  reduce 102


state 121
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	lista_exp_arit : exp_arit .  (55)

	'+'  shift 86
	'-'  shift 87
	MENORIGUAL  reduce 55
	DISTINTO  reduce 55
	MAYORIGUAL  reduce 55
	','  reduce 55
	')'  reduce 55
	'='  reduce 55
	'>'  reduce 55
	'<'  reduce 55


state 122
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (86)
	condicion : '(' '(' lista_exp_arit . comparador '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' '(' lista_exp_arit . ')' comparador lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')'  (90)
	condicion : '(' '(' lista_exp_arit . ')' '(' lista_exp_arit ')' ')'  (94)
	condicion : '(' '(' lista_exp_arit . ')' ')'  (95)

	MENORIGUAL  shift 83
	DISTINTO  shift 84
	MAYORIGUAL  shift 85
	','  shift 125
	')'  shift 151
	'='  shift 88
	'>'  shift 89
	'<'  shift 90
	.  error

	comparador  goto 152


state 123
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : '(' exp_arit exp_arit . ')'  (93)

	'+'  shift 86
	'-'  shift 87
	')'  shift 153
	.  error


state 124
	condicion : '(' exp_arit comparador . exp_arit ')'  (85)
	condicion : '(' exp_arit comparador . exp_arit  (92)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 154
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 125
	lista_exp_arit : lista_exp_arit ',' . exp_arit  (56)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 155
	termino  goto 45
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 126
	condicion : '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (89)

	MENORIGUAL  shift 83
	DISTINTO  shift 84
	MAYORIGUAL  shift 85
	'='  shift 88
	'>'  shift 89
	'<'  shift 90
	.  error

	comparador  goto 156


state 127
	exp_arit : exp_arit '+' error . ';'  (52)

	';'  shift 157
	.  error


state 128
	exp_arit : exp_arit '+' termino .  (50)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)
	termino : termino . '*' error ';'  (60)
	termino : termino . '/' error ';'  (61)

	'/'  shift 92
	'*'  shift 93
	MENORIGUAL  reduce 50
	ID  reduce 50
	DISTINTO  reduce 50
	MAYORIGUAL  reduce 50
	SINGLE_CONSTANTE  reduce 50
	ENTERO_UNSIGNED  reduce 50
	OCTAL  reduce 50
	REPEAT  reduce 50
	IF  reduce 50
	THEN  reduce 50
	END  reduce 50
	OUTF  reduce 50
	TYPEDEF  reduce 50
	RET  reduce 50
	GOTO  reduce 50
	TIPO_UNSIGNED  reduce 50
	TIPO_SINGLE  reduce 50
	TIPO_OCTAL  reduce 50
	'+'  reduce 50
	'-'  reduce 50
	';'  reduce 50
	','  reduce 50
	')'  reduce 50
	") "  reduce 50
	'='  reduce 50
	'>'  reduce 50
	'<'  reduce 50


state 129
	exp_arit : exp_arit '-' error . ';'  (53)

	';'  shift 158
	.  error


state 130
	exp_arit : exp_arit '-' termino .  (51)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)
	termino : termino . '*' error ';'  (60)
	termino : termino . '/' error ';'  (61)

	'/'  shift 92
	'*'  shift 93
	MENORIGUAL  reduce 51
	ID  reduce 51
	DISTINTO  reduce 51
	MAYORIGUAL  reduce 51
	SINGLE_CONSTANTE  reduce 51
	ENTERO_UNSIGNED  reduce 51
	OCTAL  reduce 51
	REPEAT  reduce 51
	IF  reduce 51
	THEN  reduce 51
	END  reduce 51
	OUTF  reduce 51
	TYPEDEF  reduce 51
	RET  reduce 51
	GOTO  reduce 51
	TIPO_UNSIGNED  reduce 51
	TIPO_SINGLE  reduce 51
	TIPO_OCTAL  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	';'  reduce 51
	','  reduce 51
	')'  reduce 51
	") "  reduce 51
	'='  reduce 51
	'>'  reduce 51
	'<'  reduce 51


state 131
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : exp_arit comparador exp_arit . ')'  (91)

	'+'  shift 86
	'-'  shift 87
	')'  shift 159
	.  error


state 132
	termino : termino '/' error . ';'  (61)

	';'  shift 160
	.  error


state 133
	termino : termino '/' factor .  (58)

	.  reduce 58


state 134
	termino : termino '*' error . ';'  (60)

	';'  shift 161
	.  error


state 135
	termino : termino '*' factor .  (57)

	.  reduce 57


state 136
	sentencia_if : IF condicion THEN END_IF .  (83)

	.  reduce 83


state 137
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . END_IF  (79)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables .  (80)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables END_IF  (81)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables  (82)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE END_IF  (84)

	ELSE  shift 162
	END_IF  shift 163
	ID  reduce 80
	REPEAT  reduce 80
	IF  reduce 80
	END  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	GOTO  reduce 80
	TIPO_UNSIGNED  reduce 80
	TIPO_SINGLE  reduce 80
	TIPO_OCTAL  reduce 80
	';'  reduce 80


state 138
	programa : ID BEGIN conjunto_sentencias END ';' .  (1)

	.  reduce 1


state 139
	salida : OUTF '(' error ')' .  (78)

	.  reduce 78


state 140
	salida : OUTF '(' MULTILINEA ')' .  (75)

	.  reduce 75


state 141
	salida : OUTF '(' exp_arit ") " .  (76)

	.  reduce 76


state 142
	def_triple : TYPEDEF tipo_compuesto '<' tipo . '>' ID  (105)

	'>'  shift 164
	.  error


state 143
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo FUN ID '(' . ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID '(' . ')' BEGIN retorno END  (42)

	ID  shift 144
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 165
	.  error

	tipo  goto 145
	parametro  goto 166


state 144
	parametro : ID .  (45)

	.  reduce 45


state 145
	parametro : tipo . ID  (43)
	parametro : tipo .  (44)

	ID  shift 167
	')'  reduce 44


state 146
	declaracionFun : tipo FUN '(' parametro . ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' parametro . ')' BEGIN retorno END  (40)

	')'  shift 168
	.  error


state 147
	invocacion_fun : ID '(' tipo '(' exp_arit . ')' ')'  (48)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 86
	'-'  shift 87
	')'  shift 169
	.  error


state 148
	retorno : RET '(' exp_arit . ')' ';'  (46)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 86
	'-'  shift 87
	')'  shift 170
	.  error


state 149
	sentencias_ejecutables : sentencias_ejecutables ejecutable ';' .  (22)

	.  reduce 22


state 150
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno END .  (19)

	.  reduce 19


state 151
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (86)
	condicion : '(' '(' lista_exp_arit ')' . comparador lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')'  (90)
	condicion : '(' '(' lista_exp_arit ')' . '(' lista_exp_arit ')' ')'  (94)
	condicion : '(' '(' lista_exp_arit ')' . ')'  (95)

	MENORIGUAL  shift 83
	DISTINTO  shift 84
	MAYORIGUAL  shift 85
	'('  shift 171
	')'  shift 172
	'='  shift 88
	'>'  shift 89
	'<'  shift 90
	.  error

	comparador  goto 173


state 152
	condicion : '(' '(' lista_exp_arit comparador . '(' lista_exp_arit ')' ')'  (87)

	'('  shift 174
	.  error


state 153
	condicion : '(' exp_arit exp_arit ')' .  (93)

	.  reduce 93


state 154
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : '(' exp_arit comparador exp_arit . ')'  (85)
	condicion : '(' exp_arit comparador exp_arit .  (92)

	'+'  shift 86
	'-'  shift 87
	')'  shift 175
	ID  reduce 92
	REPEAT  reduce 92
	IF  reduce 92
	THEN  reduce 92
	END  reduce 92
	OUTF  reduce 92
	TYPEDEF  reduce 92
	RET  reduce 92
	GOTO  reduce 92
	TIPO_UNSIGNED  reduce 92
	TIPO_SINGLE  reduce 92
	TIPO_OCTAL  reduce 92
	';'  reduce 92


state 155
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	lista_exp_arit : lista_exp_arit ',' exp_arit .  (56)

	'+'  shift 86
	'-'  shift 87
	MENORIGUAL  reduce 56
	DISTINTO  reduce 56
	MAYORIGUAL  reduce 56
	','  reduce 56
	')'  reduce 56
	'='  reduce 56
	'>'  reduce 56
	'<'  reduce 56


state 156
	condicion : '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (89)

	'('  shift 176
	.  error


state 157
	exp_arit : exp_arit '+' error ';' .  (52)

	.  reduce 52


state 158
	exp_arit : exp_arit '-' error ';' .  (53)

	.  reduce 53


state 159
	condicion : exp_arit comparador exp_arit ')' .  (91)

	.  reduce 91


state 160
	termino : termino '/' error ';' .  (61)

	.  reduce 61


state 161
	termino : termino '*' error ';' .  (60)

	.  reduce 60


state 162
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables END_IF  (81)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables  (82)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . END_IF  (84)

	BEGIN  shift 35
	END_IF  shift 177
	.  error

	bloque_sentencias_ejecutables  goto 178


state 163
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF .  (79)

	.  reduce 79


state 164
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' . ID  (105)

	ID  shift 179
	.  error


state 165
	declaracionFun : tipo FUN ID '(' ')' . BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID '(' ')' . BEGIN retorno END  (42)

	BEGIN  shift 180
	.  error


state 166
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN conjunto_sentencias END  (38)

	')'  shift 181
	.  error


state 167
	parametro : tipo ID .  (43)

	.  reduce 43


state 168
	declaracionFun : tipo FUN '(' parametro ')' . BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' parametro ')' . BEGIN retorno END  (40)

	BEGIN  shift 182
	.  error


state 169
	invocacion_fun : ID '(' tipo '(' exp_arit ')' . ')'  (48)

	')'  shift 183
	.  error


state 170
	retorno : RET '(' exp_arit ')' . ';'  (46)

	';'  shift 184
	.  error


state 171
	condicion : '(' '(' lista_exp_arit ')' '(' . lista_exp_arit ')' ')'  (94)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 121
	termino  goto 45
	lista_exp_arit  goto 185
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 172
	condicion : '(' '(' lista_exp_arit ')' ')' .  (95)

	.  reduce 95


state 173
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (86)
	condicion : '(' '(' lista_exp_arit ')' comparador . lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')'  (90)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	'('  shift 186
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 121
	termino  goto 45
	lista_exp_arit  goto 187
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 174
	condicion : '(' '(' lista_exp_arit comparador '(' . lista_exp_arit ')' ')'  (87)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 121
	termino  goto 45
	lista_exp_arit  goto 188
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 175
	condicion : '(' exp_arit comparador exp_arit ')' .  (85)

	.  reduce 85


state 176
	condicion : '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (89)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 121
	termino  goto 45
	lista_exp_arit  goto 189
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 177
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF .  (84)

	.  reduce 84


state 178
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables . END_IF  (81)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables .  (82)

	END_IF  shift 190
	ID  reduce 82
	REPEAT  reduce 82
	IF  reduce 82
	END  reduce 82
	OUTF  reduce 82
	TYPEDEF  reduce 82
	RET  reduce 82
	GOTO  reduce 82
	TIPO_UNSIGNED  reduce 82
	TIPO_SINGLE  reduce 82
	TIPO_OCTAL  reduce 82
	';'  reduce 82


state 179
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID .  (105)

	.  reduce 105


state 180
	declaracionFun : tipo FUN ID '(' ')' BEGIN . conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID '(' ')' BEGIN . retorno END  (42)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 191
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 192
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 181
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN conjunto_sentencias END  (38)

	BEGIN  shift 193
	.  error


state 182
	declaracionFun : tipo FUN '(' parametro ')' BEGIN . conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' parametro ')' BEGIN . retorno END  (40)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 194
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 195
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 183
	invocacion_fun : ID '(' tipo '(' exp_arit ')' ')' .  (48)

	.  reduce 48


state 184
	retorno : RET '(' exp_arit ')' ';' .  (46)

	.  reduce 46


state 185
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit . ')' ')'  (94)

	','  shift 125
	')'  shift 196
	.  error


state 186
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (86)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')'  (90)

	ID  shift 38
	SINGLE_CONSTANTE  shift 39
	ENTERO_UNSIGNED  shift 40
	OCTAL  shift 41
	.  error

	invocacion_fun  goto 43
	exp_arit  goto 121
	termino  goto 45
	lista_exp_arit  goto 197
	factor  goto 46
	constante  goto 47
	triple  goto 48


state 187
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit . ')' ')'  (88)

	','  shift 125
	')'  shift 198
	.  error


state 188
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit . ')' ')'  (87)

	','  shift 125
	')'  shift 199
	.  error


state 189
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (89)

	','  shift 125
	')'  shift 200
	.  error


state 190
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF .  (81)

	.  reduce 81


state 191
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)
	declaracionFun : tipo FUN ID '(' ')' BEGIN conjunto_sentencias . retorno END  (41)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 201
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 192
	declaracionFun : tipo FUN ID '(' ')' BEGIN retorno . END  (42)

	END  shift 202
	.  error


state 193
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . retorno END  (37)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . conjunto_sentencias END  (38)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 203
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 204
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 194
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)
	declaracionFun : tipo FUN '(' parametro ')' BEGIN conjunto_sentencias . retorno END  (39)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 205
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 195
	declaracionFun : tipo FUN '(' parametro ')' BEGIN retorno . END  (40)

	END  shift 206
	.  error


state 196
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' . ')'  (94)

	')'  shift 207
	.  error


state 197
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (86)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')'  (90)

	','  shift 125
	')'  shift 208
	.  error


state 198
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' . ')'  (88)

	')'  shift 209
	.  error


state 199
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' . ')'  (87)

	')'  shift 210
	.  error


state 200
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (89)

	')'  shift 211
	.  error


state 201
	declaracionFun : tipo FUN ID '(' ')' BEGIN conjunto_sentencias retorno . END  (41)

	END  shift 212
	.  error


state 202
	declaracionFun : tipo FUN ID '(' ')' BEGIN retorno END .  (42)

	.  reduce 42


state 203
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias . retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias . END  (38)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 213
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 214
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	triple  goto 28


state 204
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN retorno . END  (37)

	END  shift 215
	.  error


state 205
	declaracionFun : tipo FUN '(' parametro ')' BEGIN conjunto_sentencias retorno . END  (39)

	END  shift 216
	.  error


state 206
	declaracionFun : tipo FUN '(' parametro ')' BEGIN retorno END .  (40)

	.  reduce 40


state 207
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')' .  (94)

	.  reduce 94


state 208
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (86)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' .  (90)

	')'  shift 217
	ID  reduce 90
	REPEAT  reduce 90
	IF  reduce 90
	THEN  reduce 90
	END  reduce 90
	OUTF  reduce 90
	TYPEDEF  reduce 90
	RET  reduce 90
	GOTO  reduce 90
	TIPO_UNSIGNED  reduce 90
	TIPO_SINGLE  reduce 90
	TIPO_OCTAL  reduce 90
	';'  reduce 90


state 209
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')' .  (88)

	.  reduce 88


state 210
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')' .  (87)

	.  reduce 87


state 211
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (89)

	.  reduce 89


state 212
	declaracionFun : tipo FUN ID '(' ')' BEGIN conjunto_sentencias retorno END .  (41)

	.  reduce 41


state 213
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias END .  (38)

	.  reduce 38


state 214
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno . END  (36)

	END  shift 218
	.  error


state 215
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN retorno END .  (37)

	.  reduce 37


state 216
	declaracionFun : tipo FUN '(' parametro ')' BEGIN conjunto_sentencias retorno END .  (39)

	.  reduce 39


state 217
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (86)

	.  reduce 86


state 218
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno END .  (36)

	.  reduce 36


44 terminals, 31 nonterminals
107 grammar rules, 219 states
