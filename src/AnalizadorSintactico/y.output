   0  $accept : programa $end

   1  programa : ID BEGIN conjunto_sentencias END ';'
   2           | BEGIN conjunto_sentencias END ';'
   3           | ID conjunto_sentencias END ';'

   4  conjunto_sentencias : declarativa ';'
   5                      | declarativa
   6                      | ejecutable ';'
   7                      | ejecutable
   8                      | conjunto_sentencias declarativa ';'
   9                      | conjunto_sentencias declarativa
  10                      | conjunto_sentencias ejecutable ';'
  11                      | conjunto_sentencias ejecutable

  12  ejecutable : sentencia_if
  13             | invocacion_fun
  14             | asig
  15             | repeat_until
  16             | goto
  17             | salida

  18  bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END
  19                                | BEGIN sentencias_ejecutables retorno END
  20                                | BEGIN retorno END

  21  sentencias_ejecutables : ejecutable ';'
  22                         | sentencias_ejecutables ejecutable ';'
  23                         | ejecutable
  24                         | sentencias_ejecutables ejecutable

  25  declarativa : declaracionFun
  26              | declarvar
  27              | def_triple
  28              | declar_compuesto

  29  declarvar : tipo lista_var

  30  declar_compuesto : ID lista_var

  31  lista_var : ID
  32            | lista_var ',' ID

  33  tipo : TIPO_OCTAL
  34       | TIPO_UNSIGNED
  35       | TIPO_SINGLE

  36  declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno END
  37                 | tipo FUN ID '(' parametro ')' BEGIN retorno END
  38                 | tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias END
  39                 | tipo FUN '(' parametro ')' BEGIN conjunto_sentencias retorno END
  40                 | tipo FUN '(' parametro ')' BEGIN retorno END
  41                 | tipo FUN ID '(' ')' BEGIN conjunto_sentencias retorno END
  42                 | tipo FUN ID '(' ')' BEGIN retorno END

  43  parametro : tipo ID
  44            | tipo
  45            | ID

  46  retorno : RET '(' exp_arit ')' ';'

  47  asig : ID ASIGNACION exp_arit
  48       | ID '{' constante '}' ASIGNACION exp_arit

  49  exp_arit : exp_arit '+' termino
  50           | exp_arit '-' termino
  51           | exp_arit '+' error ';'
  52           | exp_arit '-' error ';'
  53           | termino

  54  lista_exp_arit : exp_arit
  55                 | lista_exp_arit ',' exp_arit

  56  termino : termino '*' factor
  57          | termino '/' factor
  58          | factor
  59          | termino '*' error ';'
  60          | termino '/' error ';'

  61  factor : ID
  62         | ID '{' constante '}'
  63         | constante
  64         | invocacion_fun

  65  etiqueta : ID '@'

  66  constante : SINGLE_CONSTANTE
  67            | ENTERO_UNSIGNED
  68            | OCTAL

  69  invocacion_fun : ID '(' exp_arit ')'
  70                 | ID '(' tipo '(' exp_arit ')' ')'
  71                 | ID '(' ')'

  72  sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF
  73               | IF condicion THEN bloque_sentencias_ejecutables
  74               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF
  75               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables
  76               | IF condicion THEN END_IF
  77               | IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF

  78  condicion : '(' exp_arit comparador exp_arit ')'
  79            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  80            | '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'
  81            | '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'
  82            | '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  83            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'
  84            | exp_arit comparador exp_arit ')'
  85            | '(' exp_arit comparador exp_arit
  86            | '(' exp_arit exp_arit ')'
  87            | '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'
  88            | '(' '(' lista_exp_arit ')' ')'

  89  comparador : MAYORIGUAL
  90             | MENORIGUAL
  91             | DISTINTO
  92             | '='
  93             | '>'
  94             | '<'

  95  salida : OUTF '(' MULTILINEA ')'
  96         | OUTF '(' exp_arit ") "
  97         | OUTF '(' ')'
  98         | OUTF '(' error ')'

  99  repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion
 100               | REPEAT UNTIL condicion
 101               | REPEAT bloque_sentencias_ejecutables condicion

 102  def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID

 103  tipo_compuesto : TRIPLE

 104  goto : GOTO etiqueta
 105       | GOTO error ';'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN conjunto_sentencias END ';'  (1)
	programa : ID . conjunto_sentencias END ';'  (3)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	BEGIN  shift 7
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 14
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 2
	programa : BEGIN . conjunto_sentencias END ';'  (2)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 28
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	declar_compuesto : ID . lista_var  (30)
	asig : ID . ASIGNACION exp_arit  (47)
	asig : ID . '{' constante '}' ASIGNACION exp_arit  (48)
	invocacion_fun : ID . '(' exp_arit ')'  (69)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (70)
	invocacion_fun : ID . '(' ')'  (71)

	ID  shift 29
	ASIGNACION  shift 30
	'('  shift 31
	'{'  shift 32
	.  error

	lista_var  goto 33


state 5
	repeat_until : REPEAT . bloque_sentencias_ejecutables UNTIL condicion  (99)
	repeat_until : REPEAT . UNTIL condicion  (100)
	repeat_until : REPEAT . bloque_sentencias_ejecutables condicion  (101)

	BEGIN  shift 34
	UNTIL  shift 35
	.  error

	bloque_sentencias_ejecutables  goto 36


state 6
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables END_IF  (72)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables  (73)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (74)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (75)
	sentencia_if : IF . condicion THEN END_IF  (76)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE END_IF  (77)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 47


state 7
	programa : ID BEGIN . conjunto_sentencias END ';'  (1)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 48
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 8
	salida : OUTF . '(' MULTILINEA ')'  (95)
	salida : OUTF . '(' exp_arit ") "  (96)
	salida : OUTF . '(' ')'  (97)
	salida : OUTF . '(' error ')'  (98)

	'('  shift 49
	.  error


state 9
	def_triple : TYPEDEF . tipo_compuesto '<' tipo '>' ID  (102)

	TRIPLE  shift 50
	.  error

	tipo_compuesto  goto 51


state 10
	goto : GOTO . etiqueta  (104)
	goto : GOTO . error ';'  (105)

	error  shift 52
	ID  shift 53
	.  error

	etiqueta  goto 54


state 11
	tipo : TIPO_UNSIGNED .  (34)

	.  reduce 34


state 12
	tipo : TIPO_SINGLE .  (35)

	.  reduce 35


state 13
	tipo : TIPO_OCTAL .  (33)

	.  reduce 33


state 14
	programa : ID conjunto_sentencias . END ';'  (3)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 55
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 15
	conjunto_sentencias : declarativa . ';'  (4)
	conjunto_sentencias : declarativa .  (5)

	';'  shift 58
	ID  reduce 5
	REPEAT  reduce 5
	IF  reduce 5
	END  reduce 5
	OUTF  reduce 5
	TYPEDEF  reduce 5
	RET  reduce 5
	GOTO  reduce 5
	TIPO_UNSIGNED  reduce 5
	TIPO_SINGLE  reduce 5
	TIPO_OCTAL  reduce 5


state 16
	conjunto_sentencias : ejecutable . ';'  (6)
	conjunto_sentencias : ejecutable .  (7)

	';'  shift 59
	ID  reduce 7
	REPEAT  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	GOTO  reduce 7
	TIPO_UNSIGNED  reduce 7
	TIPO_SINGLE  reduce 7
	TIPO_OCTAL  reduce 7


state 17
	ejecutable : sentencia_if .  (12)

	.  reduce 12


state 18
	ejecutable : invocacion_fun .  (13)

	.  reduce 13


state 19
	ejecutable : asig .  (14)

	.  reduce 14


state 20
	ejecutable : repeat_until .  (15)

	.  reduce 15


state 21
	ejecutable : goto .  (16)

	.  reduce 16


state 22
	ejecutable : salida .  (17)

	.  reduce 17


state 23
	declarativa : declaracionFun .  (25)

	.  reduce 25


state 24
	declarativa : declarvar .  (26)

	.  reduce 26


state 25
	declarativa : def_triple .  (27)

	.  reduce 27


state 26
	declarativa : declar_compuesto .  (28)

	.  reduce 28


state 27
	declarvar : tipo . lista_var  (29)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo . FUN '(' parametro ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo . FUN '(' parametro ')' BEGIN retorno END  (40)
	declaracionFun : tipo . FUN ID '(' ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo . FUN ID '(' ')' BEGIN retorno END  (42)

	ID  shift 29
	FUN  shift 60
	.  error

	lista_var  goto 61


state 28
	programa : BEGIN conjunto_sentencias . END ';'  (2)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 62
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 29
	lista_var : ID .  (31)

	.  reduce 31


state 30
	asig : ID ASIGNACION . exp_arit  (47)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 63
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 31
	invocacion_fun : ID '(' . exp_arit ')'  (69)
	invocacion_fun : ID '(' . tipo '(' exp_arit ')' ')'  (70)
	invocacion_fun : ID '(' . ')'  (71)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 64
	.  error

	invocacion_fun  goto 42
	tipo  goto 65
	exp_arit  goto 66
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 32
	asig : ID '{' . constante '}' ASIGNACION exp_arit  (48)

	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	constante  goto 67


state 33
	declar_compuesto : ID lista_var .  (30)
	lista_var : lista_var . ',' ID  (32)

	','  shift 68
	ID  reduce 30
	REPEAT  reduce 30
	IF  reduce 30
	END  reduce 30
	OUTF  reduce 30
	TYPEDEF  reduce 30
	RET  reduce 30
	GOTO  reduce 30
	TIPO_UNSIGNED  reduce 30
	TIPO_SINGLE  reduce 30
	TIPO_OCTAL  reduce 30
	';'  reduce 30


state 34
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables END  (18)
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables retorno END  (19)
	bloque_sentencias_ejecutables : BEGIN . retorno END  (20)

	ID  shift 69
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	RET  shift 70
	GOTO  shift 10
	.  error

	ejecutable  goto 71
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	sentencias_ejecutables  goto 72
	retorno  goto 73


state 35
	repeat_until : REPEAT UNTIL . condicion  (100)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 74


state 36
	repeat_until : REPEAT bloque_sentencias_ejecutables . UNTIL condicion  (99)
	repeat_until : REPEAT bloque_sentencias_ejecutables . condicion  (101)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	UNTIL  shift 75
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 76


state 37
	factor : ID .  (61)
	factor : ID . '{' constante '}'  (62)
	invocacion_fun : ID . '(' exp_arit ')'  (69)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (70)
	invocacion_fun : ID . '(' ')'  (71)

	'('  shift 31
	'{'  shift 77
	MENORIGUAL  reduce 61
	ID  reduce 61
	DISTINTO  reduce 61
	MAYORIGUAL  reduce 61
	SINGLE_CONSTANTE  reduce 61
	ENTERO_UNSIGNED  reduce 61
	OCTAL  reduce 61
	REPEAT  reduce 61
	IF  reduce 61
	THEN  reduce 61
	END  reduce 61
	OUTF  reduce 61
	TYPEDEF  reduce 61
	RET  reduce 61
	GOTO  reduce 61
	TIPO_UNSIGNED  reduce 61
	TIPO_SINGLE  reduce 61
	TIPO_OCTAL  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	'/'  reduce 61
	'*'  reduce 61
	';'  reduce 61
	','  reduce 61
	')'  reduce 61
	'='  reduce 61
	'>'  reduce 61
	'<'  reduce 61
	") "  reduce 61


state 38
	constante : SINGLE_CONSTANTE .  (66)

	.  reduce 66


state 39
	constante : ENTERO_UNSIGNED .  (67)

	.  reduce 67


state 40
	constante : OCTAL .  (68)

	.  reduce 68


state 41
	condicion : '(' . exp_arit comparador exp_arit ')'  (78)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' . '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' . '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (81)
	condicion : '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (82)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (83)
	condicion : '(' . exp_arit comparador exp_arit  (85)
	condicion : '(' . exp_arit exp_arit ')'  (86)
	condicion : '(' . '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' . '(' lista_exp_arit ')' ')'  (88)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 78
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 79
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 80
	factor  goto 46


state 42
	factor : invocacion_fun .  (64)

	.  reduce 64


state 43
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	condicion : exp_arit . comparador exp_arit ')'  (84)

	MENORIGUAL  shift 81
	DISTINTO  shift 82
	MAYORIGUAL  shift 83
	'+'  shift 84
	'-'  shift 85
	'='  shift 86
	'>'  shift 87
	'<'  shift 88
	.  error

	comparador  goto 89


state 44
	factor : constante .  (63)

	.  reduce 63


state 45
	exp_arit : termino .  (53)
	termino : termino . '*' factor  (56)
	termino : termino . '/' factor  (57)
	termino : termino . '*' error ';'  (59)
	termino : termino . '/' error ';'  (60)

	'/'  shift 90
	'*'  shift 91
	MENORIGUAL  reduce 53
	ID  reduce 53
	DISTINTO  reduce 53
	MAYORIGUAL  reduce 53
	SINGLE_CONSTANTE  reduce 53
	ENTERO_UNSIGNED  reduce 53
	OCTAL  reduce 53
	REPEAT  reduce 53
	IF  reduce 53
	THEN  reduce 53
	END  reduce 53
	OUTF  reduce 53
	TYPEDEF  reduce 53
	RET  reduce 53
	GOTO  reduce 53
	TIPO_UNSIGNED  reduce 53
	TIPO_SINGLE  reduce 53
	TIPO_OCTAL  reduce 53
	'+'  reduce 53
	'-'  reduce 53
	';'  reduce 53
	','  reduce 53
	')'  reduce 53
	'='  reduce 53
	'>'  reduce 53
	'<'  reduce 53
	") "  reduce 53


state 46
	termino : factor .  (58)

	.  reduce 58


state 47
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables END_IF  (72)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables  (73)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (74)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (75)
	sentencia_if : IF condicion . THEN END_IF  (76)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE END_IF  (77)

	THEN  shift 92
	.  error


state 48
	programa : ID BEGIN conjunto_sentencias . END ';'  (1)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 93
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 49
	salida : OUTF '(' . MULTILINEA ')'  (95)
	salida : OUTF '(' . exp_arit ") "  (96)
	salida : OUTF '(' . ')'  (97)
	salida : OUTF '(' . error ')'  (98)

	error  shift 94
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	MULTILINEA  shift 95
	')'  shift 96
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 97
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 50
	tipo_compuesto : TRIPLE .  (103)

	.  reduce 103


state 51
	def_triple : TYPEDEF tipo_compuesto . '<' tipo '>' ID  (102)

	'<'  shift 98
	.  error


state 52
	goto : GOTO error . ';'  (105)

	';'  shift 99
	.  error


state 53
	etiqueta : ID . '@'  (65)

	'@'  shift 100
	.  error


state 54
	goto : GOTO etiqueta .  (104)

	.  reduce 104


state 55
	programa : ID conjunto_sentencias END . ';'  (3)

	';'  shift 101
	.  error


state 56
	conjunto_sentencias : conjunto_sentencias declarativa . ';'  (8)
	conjunto_sentencias : conjunto_sentencias declarativa .  (9)

	';'  shift 102
	ID  reduce 9
	REPEAT  reduce 9
	IF  reduce 9
	END  reduce 9
	OUTF  reduce 9
	TYPEDEF  reduce 9
	RET  reduce 9
	GOTO  reduce 9
	TIPO_UNSIGNED  reduce 9
	TIPO_SINGLE  reduce 9
	TIPO_OCTAL  reduce 9


state 57
	conjunto_sentencias : conjunto_sentencias ejecutable . ';'  (10)
	conjunto_sentencias : conjunto_sentencias ejecutable .  (11)

	';'  shift 103
	ID  reduce 11
	REPEAT  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	GOTO  reduce 11
	TIPO_UNSIGNED  reduce 11
	TIPO_SINGLE  reduce 11
	TIPO_OCTAL  reduce 11


state 58
	conjunto_sentencias : declarativa ';' .  (4)

	.  reduce 4


state 59
	conjunto_sentencias : ejecutable ';' .  (6)

	.  reduce 6


state 60
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo FUN . '(' parametro ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN . '(' parametro ')' BEGIN retorno END  (40)
	declaracionFun : tipo FUN . ID '(' ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN . ID '(' ')' BEGIN retorno END  (42)

	ID  shift 104
	'('  shift 105
	.  error


state 61
	declarvar : tipo lista_var .  (29)
	lista_var : lista_var . ',' ID  (32)

	','  shift 68
	ID  reduce 29
	REPEAT  reduce 29
	IF  reduce 29
	END  reduce 29
	OUTF  reduce 29
	TYPEDEF  reduce 29
	RET  reduce 29
	GOTO  reduce 29
	TIPO_UNSIGNED  reduce 29
	TIPO_SINGLE  reduce 29
	TIPO_OCTAL  reduce 29
	';'  reduce 29


state 62
	programa : BEGIN conjunto_sentencias END . ';'  (2)

	';'  shift 106
	.  error


state 63
	asig : ID ASIGNACION exp_arit .  (47)
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)

	'+'  shift 84
	'-'  shift 85
	ID  reduce 47
	REPEAT  reduce 47
	IF  reduce 47
	END  reduce 47
	OUTF  reduce 47
	TYPEDEF  reduce 47
	RET  reduce 47
	GOTO  reduce 47
	TIPO_UNSIGNED  reduce 47
	TIPO_SINGLE  reduce 47
	TIPO_OCTAL  reduce 47
	';'  reduce 47


state 64
	invocacion_fun : ID '(' ')' .  (71)

	.  reduce 71


state 65
	invocacion_fun : ID '(' tipo . '(' exp_arit ')' ')'  (70)

	'('  shift 107
	.  error


state 66
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	invocacion_fun : ID '(' exp_arit . ')'  (69)

	'+'  shift 84
	'-'  shift 85
	')'  shift 108
	.  error


state 67
	asig : ID '{' constante . '}' ASIGNACION exp_arit  (48)

	'}'  shift 109
	.  error


state 68
	lista_var : lista_var ',' . ID  (32)

	ID  shift 110
	.  error


state 69
	asig : ID . ASIGNACION exp_arit  (47)
	asig : ID . '{' constante '}' ASIGNACION exp_arit  (48)
	invocacion_fun : ID . '(' exp_arit ')'  (69)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (70)
	invocacion_fun : ID . '(' ')'  (71)

	ASIGNACION  shift 30
	'('  shift 31
	'{'  shift 32
	.  error


state 70
	retorno : RET . '(' exp_arit ')' ';'  (46)

	'('  shift 111
	.  error


state 71
	sentencias_ejecutables : ejecutable . ';'  (21)
	sentencias_ejecutables : ejecutable .  (23)

	';'  shift 112
	ID  reduce 23
	REPEAT  reduce 23
	IF  reduce 23
	END  reduce 23
	OUTF  reduce 23
	RET  reduce 23
	GOTO  reduce 23


state 72
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . END  (18)
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . retorno END  (19)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable ';'  (22)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable  (24)

	ID  shift 69
	REPEAT  shift 5
	IF  shift 6
	END  shift 113
	OUTF  shift 8
	RET  shift 70
	GOTO  shift 10
	.  error

	ejecutable  goto 114
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 115


state 73
	bloque_sentencias_ejecutables : BEGIN retorno . END  (20)

	END  shift 116
	.  error


state 74
	repeat_until : REPEAT UNTIL condicion .  (100)

	.  reduce 100


state 75
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL . condicion  (99)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 117


state 76
	repeat_until : REPEAT bloque_sentencias_ejecutables condicion .  (101)

	.  reduce 101


state 77
	factor : ID '{' . constante '}'  (62)

	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	constante  goto 118


state 78
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' . lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' . lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (81)
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (83)
	condicion : '(' '(' . lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' '(' . lista_exp_arit ')' ')'  (88)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 119
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 120
	factor  goto 46


state 79
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	lista_exp_arit : exp_arit .  (54)
	condicion : '(' exp_arit . comparador exp_arit ')'  (78)
	condicion : '(' exp_arit . comparador exp_arit  (85)
	condicion : '(' exp_arit . exp_arit ')'  (86)

	MENORIGUAL  shift 81
	ID  shift 37
	DISTINTO  shift 82
	MAYORIGUAL  shift 83
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'+'  shift 84
	'-'  shift 85
	'='  shift 86
	'>'  shift 87
	'<'  shift 88
	','  reduce 54
	')'  reduce 54

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	factor  goto 46
	comparador  goto 122


state 80
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (82)

	','  shift 123
	')'  shift 124
	.  error


state 81
	comparador : MENORIGUAL .  (90)

	.  reduce 90


state 82
	comparador : DISTINTO .  (91)

	.  reduce 91


state 83
	comparador : MAYORIGUAL .  (89)

	.  reduce 89


state 84
	exp_arit : exp_arit '+' . termino  (49)
	exp_arit : exp_arit '+' . error ';'  (51)

	error  shift 125
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	termino  goto 126
	factor  goto 46


state 85
	exp_arit : exp_arit '-' . termino  (50)
	exp_arit : exp_arit '-' . error ';'  (52)

	error  shift 127
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	termino  goto 128
	factor  goto 46


state 86
	comparador : '=' .  (92)

	.  reduce 92


state 87
	comparador : '>' .  (93)

	.  reduce 93


state 88
	comparador : '<' .  (94)

	.  reduce 94


state 89
	condicion : exp_arit comparador . exp_arit ')'  (84)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 129
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 90
	termino : termino '/' . factor  (57)
	termino : termino '/' . error ';'  (60)

	error  shift 130
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	factor  goto 131


state 91
	termino : termino '*' . factor  (56)
	termino : termino '*' . error ';'  (59)

	error  shift 132
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	factor  goto 133


state 92
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables END_IF  (72)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables  (73)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (74)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (75)
	sentencia_if : IF condicion THEN . END_IF  (76)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE END_IF  (77)

	BEGIN  shift 34
	END_IF  shift 134
	.  error

	bloque_sentencias_ejecutables  goto 135


state 93
	programa : ID BEGIN conjunto_sentencias END . ';'  (1)

	';'  shift 136
	.  error


state 94
	salida : OUTF '(' error . ')'  (98)

	')'  shift 137
	.  error


state 95
	salida : OUTF '(' MULTILINEA . ')'  (95)

	')'  shift 138
	.  error


state 96
	salida : OUTF '(' ')' .  (97)

	.  reduce 97


state 97
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	salida : OUTF '(' exp_arit . ") "  (96)

	'+'  shift 84
	'-'  shift 85
	") "  shift 139
	.  error


state 98
	def_triple : TYPEDEF tipo_compuesto '<' . tipo '>' ID  (102)

	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 140


state 99
	goto : GOTO error ';' .  (105)

	.  reduce 105


state 100
	etiqueta : ID '@' .  (65)

	.  reduce 65


state 101
	programa : ID conjunto_sentencias END ';' .  (3)

	.  reduce 3


state 102
	conjunto_sentencias : conjunto_sentencias declarativa ';' .  (8)

	.  reduce 8


state 103
	conjunto_sentencias : conjunto_sentencias ejecutable ';' .  (10)

	.  reduce 10


state 104
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo FUN ID . '(' ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID . '(' ')' BEGIN retorno END  (42)

	'('  shift 141
	.  error


state 105
	declaracionFun : tipo FUN '(' . parametro ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' . parametro ')' BEGIN retorno END  (40)

	ID  shift 142
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 143
	parametro  goto 144


state 106
	programa : BEGIN conjunto_sentencias END ';' .  (2)

	.  reduce 2


state 107
	invocacion_fun : ID '(' tipo '(' . exp_arit ')' ')'  (70)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 145
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 108
	invocacion_fun : ID '(' exp_arit ')' .  (69)

	.  reduce 69


state 109
	asig : ID '{' constante '}' . ASIGNACION exp_arit  (48)

	ASIGNACION  shift 146
	.  error


state 110
	lista_var : lista_var ',' ID .  (32)

	.  reduce 32


state 111
	retorno : RET '(' . exp_arit ')' ';'  (46)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 147
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 112
	sentencias_ejecutables : ejecutable ';' .  (21)

	.  reduce 21


state 113
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END .  (18)

	.  reduce 18


state 114
	sentencias_ejecutables : sentencias_ejecutables ejecutable . ';'  (22)
	sentencias_ejecutables : sentencias_ejecutables ejecutable .  (24)

	';'  shift 148
	ID  reduce 24
	REPEAT  reduce 24
	IF  reduce 24
	END  reduce 24
	OUTF  reduce 24
	RET  reduce 24
	GOTO  reduce 24


state 115
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno . END  (19)

	END  shift 149
	.  error


state 116
	bloque_sentencias_ejecutables : BEGIN retorno END .  (20)

	.  reduce 20


state 117
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion .  (99)

	.  reduce 99


state 118
	factor : ID '{' constante . '}'  (62)

	'}'  shift 150
	.  error


state 119
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	lista_exp_arit : exp_arit .  (54)

	'+'  shift 84
	'-'  shift 85
	MENORIGUAL  reduce 54
	DISTINTO  reduce 54
	MAYORIGUAL  reduce 54
	','  reduce 54
	')'  reduce 54
	'='  reduce 54
	'>'  reduce 54
	'<'  reduce 54


state 120
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' lista_exp_arit . comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit . ')' comparador lista_exp_arit ')' ')'  (81)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')'  (83)
	condicion : '(' '(' lista_exp_arit . ')' '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' '(' lista_exp_arit . ')' ')'  (88)

	MENORIGUAL  shift 81
	DISTINTO  shift 82
	MAYORIGUAL  shift 83
	','  shift 123
	')'  shift 151
	'='  shift 86
	'>'  shift 87
	'<'  shift 88
	.  error

	comparador  goto 152


state 121
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	condicion : '(' exp_arit exp_arit . ')'  (86)

	'+'  shift 84
	'-'  shift 85
	')'  shift 153
	.  error


state 122
	condicion : '(' exp_arit comparador . exp_arit ')'  (78)
	condicion : '(' exp_arit comparador . exp_arit  (85)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 154
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 123
	lista_exp_arit : lista_exp_arit ',' . exp_arit  (55)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 155
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 124
	condicion : '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (82)

	MENORIGUAL  shift 81
	DISTINTO  shift 82
	MAYORIGUAL  shift 83
	'='  shift 86
	'>'  shift 87
	'<'  shift 88
	.  error

	comparador  goto 156


state 125
	exp_arit : exp_arit '+' error . ';'  (51)

	';'  shift 157
	.  error


state 126
	exp_arit : exp_arit '+' termino .  (49)
	termino : termino . '*' factor  (56)
	termino : termino . '/' factor  (57)
	termino : termino . '*' error ';'  (59)
	termino : termino . '/' error ';'  (60)

	'/'  shift 90
	'*'  shift 91
	MENORIGUAL  reduce 49
	ID  reduce 49
	DISTINTO  reduce 49
	MAYORIGUAL  reduce 49
	SINGLE_CONSTANTE  reduce 49
	ENTERO_UNSIGNED  reduce 49
	OCTAL  reduce 49
	REPEAT  reduce 49
	IF  reduce 49
	THEN  reduce 49
	END  reduce 49
	OUTF  reduce 49
	TYPEDEF  reduce 49
	RET  reduce 49
	GOTO  reduce 49
	TIPO_UNSIGNED  reduce 49
	TIPO_SINGLE  reduce 49
	TIPO_OCTAL  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	';'  reduce 49
	','  reduce 49
	')'  reduce 49
	'='  reduce 49
	'>'  reduce 49
	'<'  reduce 49
	") "  reduce 49


state 127
	exp_arit : exp_arit '-' error . ';'  (52)

	';'  shift 158
	.  error


state 128
	exp_arit : exp_arit '-' termino .  (50)
	termino : termino . '*' factor  (56)
	termino : termino . '/' factor  (57)
	termino : termino . '*' error ';'  (59)
	termino : termino . '/' error ';'  (60)

	'/'  shift 90
	'*'  shift 91
	MENORIGUAL  reduce 50
	ID  reduce 50
	DISTINTO  reduce 50
	MAYORIGUAL  reduce 50
	SINGLE_CONSTANTE  reduce 50
	ENTERO_UNSIGNED  reduce 50
	OCTAL  reduce 50
	REPEAT  reduce 50
	IF  reduce 50
	THEN  reduce 50
	END  reduce 50
	OUTF  reduce 50
	TYPEDEF  reduce 50
	RET  reduce 50
	GOTO  reduce 50
	TIPO_UNSIGNED  reduce 50
	TIPO_SINGLE  reduce 50
	TIPO_OCTAL  reduce 50
	'+'  reduce 50
	'-'  reduce 50
	';'  reduce 50
	','  reduce 50
	')'  reduce 50
	'='  reduce 50
	'>'  reduce 50
	'<'  reduce 50
	") "  reduce 50


state 129
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	condicion : exp_arit comparador exp_arit . ')'  (84)

	'+'  shift 84
	'-'  shift 85
	')'  shift 159
	.  error


state 130
	termino : termino '/' error . ';'  (60)

	';'  shift 160
	.  error


state 131
	termino : termino '/' factor .  (57)

	.  reduce 57


state 132
	termino : termino '*' error . ';'  (59)

	';'  shift 161
	.  error


state 133
	termino : termino '*' factor .  (56)

	.  reduce 56


state 134
	sentencia_if : IF condicion THEN END_IF .  (76)

	.  reduce 76


state 135
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . END_IF  (72)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables .  (73)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables END_IF  (74)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables  (75)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE END_IF  (77)

	ELSE  shift 162
	END_IF  shift 163
	ID  reduce 73
	REPEAT  reduce 73
	IF  reduce 73
	END  reduce 73
	OUTF  reduce 73
	TYPEDEF  reduce 73
	RET  reduce 73
	GOTO  reduce 73
	TIPO_UNSIGNED  reduce 73
	TIPO_SINGLE  reduce 73
	TIPO_OCTAL  reduce 73
	';'  reduce 73


state 136
	programa : ID BEGIN conjunto_sentencias END ';' .  (1)

	.  reduce 1


state 137
	salida : OUTF '(' error ')' .  (98)

	.  reduce 98


state 138
	salida : OUTF '(' MULTILINEA ')' .  (95)

	.  reduce 95


state 139
	salida : OUTF '(' exp_arit ") " .  (96)

	.  reduce 96


state 140
	def_triple : TYPEDEF tipo_compuesto '<' tipo . '>' ID  (102)

	'>'  shift 164
	.  error


state 141
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN conjunto_sentencias END  (38)
	declaracionFun : tipo FUN ID '(' . ')' BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID '(' . ')' BEGIN retorno END  (42)

	ID  shift 142
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 165
	.  error

	tipo  goto 143
	parametro  goto 166


state 142
	parametro : ID .  (45)

	.  reduce 45


state 143
	parametro : tipo . ID  (43)
	parametro : tipo .  (44)

	ID  shift 167
	')'  reduce 44


state 144
	declaracionFun : tipo FUN '(' parametro . ')' BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' parametro . ')' BEGIN retorno END  (40)

	')'  shift 168
	.  error


state 145
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	invocacion_fun : ID '(' tipo '(' exp_arit . ')' ')'  (70)

	'+'  shift 84
	'-'  shift 85
	')'  shift 169
	.  error


state 146
	asig : ID '{' constante '}' ASIGNACION . exp_arit  (48)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 170
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 147
	retorno : RET '(' exp_arit . ')' ';'  (46)
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)

	'+'  shift 84
	'-'  shift 85
	')'  shift 171
	.  error


state 148
	sentencias_ejecutables : sentencias_ejecutables ejecutable ';' .  (22)

	.  reduce 22


state 149
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno END .  (19)

	.  reduce 19


state 150
	factor : ID '{' constante '}' .  (62)

	.  reduce 62


state 151
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' lista_exp_arit ')' . comparador lista_exp_arit ')' ')'  (81)
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')'  (83)
	condicion : '(' '(' lista_exp_arit ')' . '(' lista_exp_arit ')' ')'  (87)
	condicion : '(' '(' lista_exp_arit ')' . ')'  (88)

	MENORIGUAL  shift 81
	DISTINTO  shift 82
	MAYORIGUAL  shift 83
	'('  shift 172
	')'  shift 173
	'='  shift 86
	'>'  shift 87
	'<'  shift 88
	.  error

	comparador  goto 174


state 152
	condicion : '(' '(' lista_exp_arit comparador . '(' lista_exp_arit ')' ')'  (80)

	'('  shift 175
	.  error


state 153
	condicion : '(' exp_arit exp_arit ')' .  (86)

	.  reduce 86


state 154
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	condicion : '(' exp_arit comparador exp_arit . ')'  (78)
	condicion : '(' exp_arit comparador exp_arit .  (85)

	'+'  shift 84
	'-'  shift 85
	')'  shift 176
	ID  reduce 85
	REPEAT  reduce 85
	IF  reduce 85
	THEN  reduce 85
	END  reduce 85
	OUTF  reduce 85
	TYPEDEF  reduce 85
	RET  reduce 85
	GOTO  reduce 85
	TIPO_UNSIGNED  reduce 85
	TIPO_SINGLE  reduce 85
	TIPO_OCTAL  reduce 85
	';'  reduce 85


state 155
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)
	lista_exp_arit : lista_exp_arit ',' exp_arit .  (55)

	'+'  shift 84
	'-'  shift 85
	MENORIGUAL  reduce 55
	DISTINTO  reduce 55
	MAYORIGUAL  reduce 55
	','  reduce 55
	')'  reduce 55
	'='  reduce 55
	'>'  reduce 55
	'<'  reduce 55


state 156
	condicion : '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (82)

	'('  shift 177
	.  error


state 157
	exp_arit : exp_arit '+' error ';' .  (51)

	.  reduce 51


state 158
	exp_arit : exp_arit '-' error ';' .  (52)

	.  reduce 52


state 159
	condicion : exp_arit comparador exp_arit ')' .  (84)

	.  reduce 84


state 160
	termino : termino '/' error ';' .  (60)

	.  reduce 60


state 161
	termino : termino '*' error ';' .  (59)

	.  reduce 59


state 162
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables END_IF  (74)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables  (75)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . END_IF  (77)

	BEGIN  shift 34
	END_IF  shift 178
	.  error

	bloque_sentencias_ejecutables  goto 179


state 163
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF .  (72)

	.  reduce 72


state 164
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' . ID  (102)

	ID  shift 180
	.  error


state 165
	declaracionFun : tipo FUN ID '(' ')' . BEGIN conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID '(' ')' . BEGIN retorno END  (42)

	BEGIN  shift 181
	.  error


state 166
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN conjunto_sentencias END  (38)

	')'  shift 182
	.  error


state 167
	parametro : tipo ID .  (43)

	.  reduce 43


state 168
	declaracionFun : tipo FUN '(' parametro ')' . BEGIN conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' parametro ')' . BEGIN retorno END  (40)

	BEGIN  shift 183
	.  error


state 169
	invocacion_fun : ID '(' tipo '(' exp_arit ')' . ')'  (70)

	')'  shift 184
	.  error


state 170
	asig : ID '{' constante '}' ASIGNACION exp_arit .  (48)
	exp_arit : exp_arit . '+' termino  (49)
	exp_arit : exp_arit . '-' termino  (50)
	exp_arit : exp_arit . '+' error ';'  (51)
	exp_arit : exp_arit . '-' error ';'  (52)

	'+'  shift 84
	'-'  shift 85
	ID  reduce 48
	REPEAT  reduce 48
	IF  reduce 48
	END  reduce 48
	OUTF  reduce 48
	TYPEDEF  reduce 48
	RET  reduce 48
	GOTO  reduce 48
	TIPO_UNSIGNED  reduce 48
	TIPO_SINGLE  reduce 48
	TIPO_OCTAL  reduce 48
	';'  reduce 48


state 171
	retorno : RET '(' exp_arit ')' . ';'  (46)

	';'  shift 185
	.  error


state 172
	condicion : '(' '(' lista_exp_arit ')' '(' . lista_exp_arit ')' ')'  (87)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 119
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 186
	factor  goto 46


state 173
	condicion : '(' '(' lista_exp_arit ')' ')' .  (88)

	.  reduce 88


state 174
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' lista_exp_arit ')' comparador . lista_exp_arit ')' ')'  (81)
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')'  (83)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 187
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 119
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 188
	factor  goto 46


state 175
	condicion : '(' '(' lista_exp_arit comparador '(' . lista_exp_arit ')' ')'  (80)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 119
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 189
	factor  goto 46


state 176
	condicion : '(' exp_arit comparador exp_arit ')' .  (78)

	.  reduce 78


state 177
	condicion : '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (82)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 119
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 190
	factor  goto 46


state 178
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF .  (77)

	.  reduce 77


state 179
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables . END_IF  (74)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables .  (75)

	END_IF  shift 191
	ID  reduce 75
	REPEAT  reduce 75
	IF  reduce 75
	END  reduce 75
	OUTF  reduce 75
	TYPEDEF  reduce 75
	RET  reduce 75
	GOTO  reduce 75
	TIPO_UNSIGNED  reduce 75
	TIPO_SINGLE  reduce 75
	TIPO_OCTAL  reduce 75
	';'  reduce 75


state 180
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID .  (102)

	.  reduce 102


state 181
	declaracionFun : tipo FUN ID '(' ')' BEGIN . conjunto_sentencias retorno END  (41)
	declaracionFun : tipo FUN ID '(' ')' BEGIN . retorno END  (42)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 70
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 192
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 193
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 182
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN retorno END  (37)
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN conjunto_sentencias END  (38)

	BEGIN  shift 194
	.  error


state 183
	declaracionFun : tipo FUN '(' parametro ')' BEGIN . conjunto_sentencias retorno END  (39)
	declaracionFun : tipo FUN '(' parametro ')' BEGIN . retorno END  (40)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 70
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 195
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 196
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 184
	invocacion_fun : ID '(' tipo '(' exp_arit ')' ')' .  (70)

	.  reduce 70


state 185
	retorno : RET '(' exp_arit ')' ';' .  (46)

	.  reduce 46


state 186
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit . ')' ')'  (87)

	','  shift 123
	')'  shift 197
	.  error


state 187
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')'  (83)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 119
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 198
	factor  goto 46


state 188
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit . ')' ')'  (81)

	','  shift 123
	')'  shift 199
	.  error


state 189
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit . ')' ')'  (80)

	','  shift 123
	')'  shift 200
	.  error


state 190
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (82)

	','  shift 123
	')'  shift 201
	.  error


state 191
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF .  (74)

	.  reduce 74


state 192
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)
	declaracionFun : tipo FUN ID '(' ')' BEGIN conjunto_sentencias . retorno END  (41)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 70
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 202
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 193
	declaracionFun : tipo FUN ID '(' ')' BEGIN retorno . END  (42)

	END  shift 203
	.  error


state 194
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . conjunto_sentencias retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . retorno END  (37)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . conjunto_sentencias END  (38)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 70
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 204
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 205
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 195
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)
	declaracionFun : tipo FUN '(' parametro ')' BEGIN conjunto_sentencias . retorno END  (39)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 70
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 206
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 196
	declaracionFun : tipo FUN '(' parametro ')' BEGIN retorno . END  (40)

	END  shift 207
	.  error


state 197
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' . ')'  (87)

	')'  shift 208
	.  error


state 198
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (55)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (79)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')'  (83)

	','  shift 123
	')'  shift 209
	.  error


state 199
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' . ')'  (81)

	')'  shift 210
	.  error


state 200
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' . ')'  (80)

	')'  shift 211
	.  error


state 201
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (82)

	')'  shift 212
	.  error


state 202
	declaracionFun : tipo FUN ID '(' ')' BEGIN conjunto_sentencias retorno . END  (41)

	END  shift 213
	.  error


state 203
	declaracionFun : tipo FUN ID '(' ')' BEGIN retorno END .  (42)

	.  reduce 42


state 204
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (8)
	conjunto_sentencias : conjunto_sentencias . declarativa  (9)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (10)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (11)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias . retorno END  (36)
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias . END  (38)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 214
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 70
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 215
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 205
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN retorno . END  (37)

	END  shift 216
	.  error


state 206
	declaracionFun : tipo FUN '(' parametro ')' BEGIN conjunto_sentencias retorno . END  (39)

	END  shift 217
	.  error


state 207
	declaracionFun : tipo FUN '(' parametro ')' BEGIN retorno END .  (40)

	.  reduce 40


state 208
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')' .  (87)

	.  reduce 87


state 209
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (79)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' .  (83)

	')'  shift 218
	ID  reduce 83
	REPEAT  reduce 83
	IF  reduce 83
	THEN  reduce 83
	END  reduce 83
	OUTF  reduce 83
	TYPEDEF  reduce 83
	RET  reduce 83
	GOTO  reduce 83
	TIPO_UNSIGNED  reduce 83
	TIPO_SINGLE  reduce 83
	TIPO_OCTAL  reduce 83
	';'  reduce 83


state 210
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')' .  (81)

	.  reduce 81


state 211
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')' .  (80)

	.  reduce 80


state 212
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (82)

	.  reduce 82


state 213
	declaracionFun : tipo FUN ID '(' ')' BEGIN conjunto_sentencias retorno END .  (41)

	.  reduce 41


state 214
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias END .  (38)

	.  reduce 38


state 215
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno . END  (36)

	END  shift 219
	.  error


state 216
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN retorno END .  (37)

	.  reduce 37


state 217
	declaracionFun : tipo FUN '(' parametro ')' BEGIN conjunto_sentencias retorno END .  (39)

	.  reduce 39


state 218
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (79)

	.  reduce 79


state 219
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN conjunto_sentencias retorno END .  (36)

	.  reduce 36


44 terminals, 30 nonterminals
106 grammar rules, 220 states
