   0  $accept : programa $end

   1  programa : ID BEGIN conjunto_sentencias END ';'
   2           | BEGIN conjunto_sentencias END ';'
   3           | ID conjunto_sentencias END ';'
   4           | ID BEGIN conjunto_sentencias
   5           | ID conjunto_sentencias

   6  conjunto_sentencias : declarativa ';'
   7                      | declarativa
   8                      | ejecutable ';'
   9                      | ejecutable
  10                      | conjunto_sentencias declarativa ';'
  11                      | conjunto_sentencias declarativa
  12                      | conjunto_sentencias ejecutable ';'
  13                      | conjunto_sentencias ejecutable

  14  ejecutable : sentencia_if
  15             | invocacion_fun
  16             | asig
  17             | repeat_until
  18             | goto
  19             | salida

  20  bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END
  21                                | BEGIN sentencias_ejecutables retorno END
  22                                | BEGIN retorno END

  23  sentencias_ejecutables : ejecutable ';'
  24                         | sentencias_ejecutables ejecutable ';'
  25                         | ejecutable
  26                         | sentencias_ejecutables ejecutable

  27  declarativa : declaracionFun
  28              | declarvar
  29              | def_triple
  30              | declar_compuesto

  31  declarvar : tipo lista_var

  32  declar_compuesto : ID lista_var

  33  lista_var : ID
  34            | lista_var ',' ID

  35  tipo : TIPO_OCTAL
  36       | TIPO_UNSIGNED
  37       | TIPO_SINGLE

  38  declaracionFun : tipo FUN ID '(' parametro ')' BEGIN cuerpoFun END
  39                 | tipo FUN '(' parametro ')' BEGIN cuerpoFun END
  40                 | tipo FUN ID '(' ')' BEGIN cuerpoFun END

  41  parametro : tipo ID
  42            | tipo
  43            | ID

  44  cuerpoFun : retorno
  45            | conjunto_sentencias retorno

  46  retorno : RET '(' exp_arit ')' ';'
  47          | error '(' exp_arit ')' ';'

  48  asig : ID ASIGNACION exp_arit
  49       | ID '{' constante '}' ASIGNACION exp_arit

  50  exp_arit : exp_arit '+' termino
  51           | exp_arit '-' termino
  52           | exp_arit '+' error ';'
  53           | exp_arit '-' error ';'
  54           | termino

  55  lista_exp_arit : exp_arit
  56                 | lista_exp_arit ',' exp_arit

  57  termino : termino '*' factor
  58          | termino '/' factor
  59          | factor
  60          | termino '*' error ';'
  61          | termino '/' error ';'

  62  factor : ID
  63         | ID '{' constante '}'
  64         | constante
  65         | invocacion_fun

  66  etiqueta : ID '@'

  67  constante : SINGLE_CONSTANTE
  68            | ENTERO_UNSIGNED
  69            | OCTAL

  70  invocacion_fun : ID '(' exp_arit ')'
  71                 | ID '(' tipo '(' exp_arit ')' ')'
  72                 | ID '(' ')'

  73  sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF
  74               | IF condicion THEN bloque_sentencias_ejecutables
  75               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF
  76               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables
  77               | IF condicion THEN END_IF
  78               | IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF

  79  condicion : '(' exp_arit comparador exp_arit ')'
  80            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  81            | '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'
  82            | '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'
  83            | '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  84            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'
  85            | exp_arit comparador exp_arit ')'
  86            | '(' exp_arit comparador exp_arit
  87            | '(' exp_arit exp_arit ')'
  88            | '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'
  89            | '(' '(' lista_exp_arit ')' ')'

  90  comparador : MAYORIGUAL
  91             | MENORIGUAL
  92             | DISTINTO
  93             | '='
  94             | '>'
  95             | '<'

  96  salida : OUTF '(' MULTILINEA ')'
  97         | OUTF '(' exp_arit ") "
  98         | OUTF '(' ')'
  99         | OUTF '(' error ')'

 100  repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion
 101               | REPEAT UNTIL condicion
 102               | REPEAT bloque_sentencias_ejecutables condicion

 103  def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID

 104  tipo_compuesto : TRIPLE

 105  goto : GOTO etiqueta
 106       | GOTO error ';'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN conjunto_sentencias END ';'  (1)
	programa : ID . conjunto_sentencias END ';'  (3)
	programa : ID . BEGIN conjunto_sentencias  (4)
	programa : ID . conjunto_sentencias  (5)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	BEGIN  shift 7
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 14
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 2
	programa : BEGIN . conjunto_sentencias END ';'  (2)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 28
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	declar_compuesto : ID . lista_var  (32)
	asig : ID . ASIGNACION exp_arit  (48)
	asig : ID . '{' constante '}' ASIGNACION exp_arit  (49)
	invocacion_fun : ID . '(' exp_arit ')'  (70)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (71)
	invocacion_fun : ID . '(' ')'  (72)

	ID  shift 29
	ASIGNACION  shift 30
	'('  shift 31
	'{'  shift 32
	.  error

	lista_var  goto 33


state 5
	repeat_until : REPEAT . bloque_sentencias_ejecutables UNTIL condicion  (100)
	repeat_until : REPEAT . UNTIL condicion  (101)
	repeat_until : REPEAT . bloque_sentencias_ejecutables condicion  (102)

	BEGIN  shift 34
	UNTIL  shift 35
	.  error

	bloque_sentencias_ejecutables  goto 36


state 6
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables  (74)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (75)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (76)
	sentencia_if : IF . condicion THEN END_IF  (77)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE END_IF  (78)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 47


state 7
	programa : ID BEGIN . conjunto_sentencias END ';'  (1)
	programa : ID BEGIN . conjunto_sentencias  (4)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 48
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 8
	salida : OUTF . '(' MULTILINEA ')'  (96)
	salida : OUTF . '(' exp_arit ") "  (97)
	salida : OUTF . '(' ')'  (98)
	salida : OUTF . '(' error ')'  (99)

	'('  shift 49
	.  error


state 9
	def_triple : TYPEDEF . tipo_compuesto '<' tipo '>' ID  (103)

	TRIPLE  shift 50
	.  error

	tipo_compuesto  goto 51


state 10
	goto : GOTO . etiqueta  (105)
	goto : GOTO . error ';'  (106)

	error  shift 52
	ID  shift 53
	.  error

	etiqueta  goto 54


state 11
	tipo : TIPO_UNSIGNED .  (36)

	.  reduce 36


state 12
	tipo : TIPO_SINGLE .  (37)

	.  reduce 37


state 13
	tipo : TIPO_OCTAL .  (35)

	.  reduce 35


state 14
	programa : ID conjunto_sentencias . END ';'  (3)
	programa : ID conjunto_sentencias .  (5)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 55
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	$end  reduce 5

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 15
	conjunto_sentencias : declarativa . ';'  (6)
	conjunto_sentencias : declarativa .  (7)

	';'  shift 58
	$end  reduce 7
	error  reduce 7
	ID  reduce 7
	REPEAT  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	GOTO  reduce 7
	TIPO_UNSIGNED  reduce 7
	TIPO_SINGLE  reduce 7
	TIPO_OCTAL  reduce 7


state 16
	conjunto_sentencias : ejecutable . ';'  (8)
	conjunto_sentencias : ejecutable .  (9)

	';'  shift 59
	$end  reduce 9
	error  reduce 9
	ID  reduce 9
	REPEAT  reduce 9
	IF  reduce 9
	END  reduce 9
	OUTF  reduce 9
	TYPEDEF  reduce 9
	RET  reduce 9
	GOTO  reduce 9
	TIPO_UNSIGNED  reduce 9
	TIPO_SINGLE  reduce 9
	TIPO_OCTAL  reduce 9


state 17
	ejecutable : sentencia_if .  (14)

	.  reduce 14


state 18
	ejecutable : invocacion_fun .  (15)

	.  reduce 15


state 19
	ejecutable : asig .  (16)

	.  reduce 16


state 20
	ejecutable : repeat_until .  (17)

	.  reduce 17


state 21
	ejecutable : goto .  (18)

	.  reduce 18


state 22
	ejecutable : salida .  (19)

	.  reduce 19


state 23
	declarativa : declaracionFun .  (27)

	.  reduce 27


state 24
	declarativa : declarvar .  (28)

	.  reduce 28


state 25
	declarativa : def_triple .  (29)

	.  reduce 29


state 26
	declarativa : declar_compuesto .  (30)

	.  reduce 30


state 27
	declarvar : tipo . lista_var  (31)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN cuerpoFun END  (38)
	declaracionFun : tipo . FUN '(' parametro ')' BEGIN cuerpoFun END  (39)
	declaracionFun : tipo . FUN ID '(' ')' BEGIN cuerpoFun END  (40)

	ID  shift 29
	FUN  shift 60
	.  error

	lista_var  goto 61


state 28
	programa : BEGIN conjunto_sentencias . END ';'  (2)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 62
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 29
	lista_var : ID .  (33)

	.  reduce 33


state 30
	asig : ID ASIGNACION . exp_arit  (48)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 63
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 31
	invocacion_fun : ID '(' . exp_arit ')'  (70)
	invocacion_fun : ID '(' . tipo '(' exp_arit ')' ')'  (71)
	invocacion_fun : ID '(' . ')'  (72)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 64
	.  error

	invocacion_fun  goto 42
	tipo  goto 65
	exp_arit  goto 66
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 32
	asig : ID '{' . constante '}' ASIGNACION exp_arit  (49)

	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	constante  goto 67


state 33
	declar_compuesto : ID lista_var .  (32)
	lista_var : lista_var . ',' ID  (34)

	','  shift 68
	$end  reduce 32
	error  reduce 32
	ID  reduce 32
	REPEAT  reduce 32
	IF  reduce 32
	END  reduce 32
	OUTF  reduce 32
	TYPEDEF  reduce 32
	RET  reduce 32
	GOTO  reduce 32
	TIPO_UNSIGNED  reduce 32
	TIPO_SINGLE  reduce 32
	TIPO_OCTAL  reduce 32
	';'  reduce 32


state 34
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables END  (20)
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables retorno END  (21)
	bloque_sentencias_ejecutables : BEGIN . retorno END  (22)

	error  shift 69
	ID  shift 70
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	RET  shift 71
	GOTO  shift 10
	.  error

	ejecutable  goto 72
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	sentencias_ejecutables  goto 73
	retorno  goto 74


state 35
	repeat_until : REPEAT UNTIL . condicion  (101)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 75


state 36
	repeat_until : REPEAT bloque_sentencias_ejecutables . UNTIL condicion  (100)
	repeat_until : REPEAT bloque_sentencias_ejecutables . condicion  (102)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	UNTIL  shift 76
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 77


state 37
	factor : ID .  (62)
	factor : ID . '{' constante '}'  (63)
	invocacion_fun : ID . '(' exp_arit ')'  (70)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (71)
	invocacion_fun : ID . '(' ')'  (72)

	'('  shift 31
	'{'  shift 78
	$end  reduce 62
	error  reduce 62
	MENORIGUAL  reduce 62
	ID  reduce 62
	DISTINTO  reduce 62
	MAYORIGUAL  reduce 62
	SINGLE_CONSTANTE  reduce 62
	ENTERO_UNSIGNED  reduce 62
	OCTAL  reduce 62
	REPEAT  reduce 62
	IF  reduce 62
	THEN  reduce 62
	END  reduce 62
	OUTF  reduce 62
	TYPEDEF  reduce 62
	RET  reduce 62
	GOTO  reduce 62
	TIPO_UNSIGNED  reduce 62
	TIPO_SINGLE  reduce 62
	TIPO_OCTAL  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'/'  reduce 62
	'*'  reduce 62
	';'  reduce 62
	','  reduce 62
	')'  reduce 62
	'='  reduce 62
	'>'  reduce 62
	'<'  reduce 62
	") "  reduce 62


state 38
	constante : SINGLE_CONSTANTE .  (67)

	.  reduce 67


state 39
	constante : ENTERO_UNSIGNED .  (68)

	.  reduce 68


state 40
	constante : OCTAL .  (69)

	.  reduce 69


state 41
	condicion : '(' . exp_arit comparador exp_arit ')'  (79)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' . '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (81)
	condicion : '(' . '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (82)
	condicion : '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (83)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (84)
	condicion : '(' . exp_arit comparador exp_arit  (86)
	condicion : '(' . exp_arit exp_arit ')'  (87)
	condicion : '(' . '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (88)
	condicion : '(' . '(' lista_exp_arit ')' ')'  (89)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 79
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 80
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 81
	factor  goto 46


state 42
	factor : invocacion_fun .  (65)

	.  reduce 65


state 43
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : exp_arit . comparador exp_arit ')'  (85)

	MENORIGUAL  shift 82
	DISTINTO  shift 83
	MAYORIGUAL  shift 84
	'+'  shift 85
	'-'  shift 86
	'='  shift 87
	'>'  shift 88
	'<'  shift 89
	.  error

	comparador  goto 90


state 44
	factor : constante .  (64)

	.  reduce 64


state 45
	exp_arit : termino .  (54)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)
	termino : termino . '*' error ';'  (60)
	termino : termino . '/' error ';'  (61)

	'/'  shift 91
	'*'  shift 92
	$end  reduce 54
	error  reduce 54
	MENORIGUAL  reduce 54
	ID  reduce 54
	DISTINTO  reduce 54
	MAYORIGUAL  reduce 54
	SINGLE_CONSTANTE  reduce 54
	ENTERO_UNSIGNED  reduce 54
	OCTAL  reduce 54
	REPEAT  reduce 54
	IF  reduce 54
	THEN  reduce 54
	END  reduce 54
	OUTF  reduce 54
	TYPEDEF  reduce 54
	RET  reduce 54
	GOTO  reduce 54
	TIPO_UNSIGNED  reduce 54
	TIPO_SINGLE  reduce 54
	TIPO_OCTAL  reduce 54
	'+'  reduce 54
	'-'  reduce 54
	';'  reduce 54
	','  reduce 54
	')'  reduce 54
	'='  reduce 54
	'>'  reduce 54
	'<'  reduce 54
	") "  reduce 54


state 46
	termino : factor .  (59)

	.  reduce 59


state 47
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables  (74)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (75)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (76)
	sentencia_if : IF condicion . THEN END_IF  (77)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE END_IF  (78)

	THEN  shift 93
	.  error


state 48
	programa : ID BEGIN conjunto_sentencias . END ';'  (1)
	programa : ID BEGIN conjunto_sentencias .  (4)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 94
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	$end  reduce 4

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 49
	salida : OUTF '(' . MULTILINEA ')'  (96)
	salida : OUTF '(' . exp_arit ") "  (97)
	salida : OUTF '(' . ')'  (98)
	salida : OUTF '(' . error ')'  (99)

	error  shift 95
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	MULTILINEA  shift 96
	')'  shift 97
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 98
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 50
	tipo_compuesto : TRIPLE .  (104)

	.  reduce 104


state 51
	def_triple : TYPEDEF tipo_compuesto . '<' tipo '>' ID  (103)

	'<'  shift 99
	.  error


state 52
	goto : GOTO error . ';'  (106)

	';'  shift 100
	.  error


state 53
	etiqueta : ID . '@'  (66)

	'@'  shift 101
	.  error


state 54
	goto : GOTO etiqueta .  (105)

	.  reduce 105


state 55
	programa : ID conjunto_sentencias END . ';'  (3)

	';'  shift 102
	.  error


state 56
	conjunto_sentencias : conjunto_sentencias declarativa . ';'  (10)
	conjunto_sentencias : conjunto_sentencias declarativa .  (11)

	';'  shift 103
	$end  reduce 11
	error  reduce 11
	ID  reduce 11
	REPEAT  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	GOTO  reduce 11
	TIPO_UNSIGNED  reduce 11
	TIPO_SINGLE  reduce 11
	TIPO_OCTAL  reduce 11


state 57
	conjunto_sentencias : conjunto_sentencias ejecutable . ';'  (12)
	conjunto_sentencias : conjunto_sentencias ejecutable .  (13)

	';'  shift 104
	$end  reduce 13
	error  reduce 13
	ID  reduce 13
	REPEAT  reduce 13
	IF  reduce 13
	END  reduce 13
	OUTF  reduce 13
	TYPEDEF  reduce 13
	RET  reduce 13
	GOTO  reduce 13
	TIPO_UNSIGNED  reduce 13
	TIPO_SINGLE  reduce 13
	TIPO_OCTAL  reduce 13


state 58
	conjunto_sentencias : declarativa ';' .  (6)

	.  reduce 6


state 59
	conjunto_sentencias : ejecutable ';' .  (8)

	.  reduce 8


state 60
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN cuerpoFun END  (38)
	declaracionFun : tipo FUN . '(' parametro ')' BEGIN cuerpoFun END  (39)
	declaracionFun : tipo FUN . ID '(' ')' BEGIN cuerpoFun END  (40)

	ID  shift 105
	'('  shift 106
	.  error


state 61
	declarvar : tipo lista_var .  (31)
	lista_var : lista_var . ',' ID  (34)

	','  shift 68
	$end  reduce 31
	error  reduce 31
	ID  reduce 31
	REPEAT  reduce 31
	IF  reduce 31
	END  reduce 31
	OUTF  reduce 31
	TYPEDEF  reduce 31
	RET  reduce 31
	GOTO  reduce 31
	TIPO_UNSIGNED  reduce 31
	TIPO_SINGLE  reduce 31
	TIPO_OCTAL  reduce 31
	';'  reduce 31


state 62
	programa : BEGIN conjunto_sentencias END . ';'  (2)

	';'  shift 107
	.  error


state 63
	asig : ID ASIGNACION exp_arit .  (48)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 85
	'-'  shift 86
	$end  reduce 48
	error  reduce 48
	ID  reduce 48
	REPEAT  reduce 48
	IF  reduce 48
	END  reduce 48
	OUTF  reduce 48
	TYPEDEF  reduce 48
	RET  reduce 48
	GOTO  reduce 48
	TIPO_UNSIGNED  reduce 48
	TIPO_SINGLE  reduce 48
	TIPO_OCTAL  reduce 48
	';'  reduce 48


state 64
	invocacion_fun : ID '(' ')' .  (72)

	.  reduce 72


state 65
	invocacion_fun : ID '(' tipo . '(' exp_arit ')' ')'  (71)

	'('  shift 108
	.  error


state 66
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	invocacion_fun : ID '(' exp_arit . ')'  (70)

	'+'  shift 85
	'-'  shift 86
	')'  shift 109
	.  error


state 67
	asig : ID '{' constante . '}' ASIGNACION exp_arit  (49)

	'}'  shift 110
	.  error


state 68
	lista_var : lista_var ',' . ID  (34)

	ID  shift 111
	.  error


state 69
	retorno : error . '(' exp_arit ')' ';'  (47)

	'('  shift 112
	.  error


state 70
	asig : ID . ASIGNACION exp_arit  (48)
	asig : ID . '{' constante '}' ASIGNACION exp_arit  (49)
	invocacion_fun : ID . '(' exp_arit ')'  (70)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (71)
	invocacion_fun : ID . '(' ')'  (72)

	ASIGNACION  shift 30
	'('  shift 31
	'{'  shift 32
	.  error


state 71
	retorno : RET . '(' exp_arit ')' ';'  (46)

	'('  shift 113
	.  error


state 72
	sentencias_ejecutables : ejecutable . ';'  (23)
	sentencias_ejecutables : ejecutable .  (25)

	';'  shift 114
	error  reduce 25
	ID  reduce 25
	REPEAT  reduce 25
	IF  reduce 25
	END  reduce 25
	OUTF  reduce 25
	RET  reduce 25
	GOTO  reduce 25


state 73
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . END  (20)
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . retorno END  (21)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable ';'  (24)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable  (26)

	error  shift 69
	ID  shift 70
	REPEAT  shift 5
	IF  shift 6
	END  shift 115
	OUTF  shift 8
	RET  shift 71
	GOTO  shift 10
	.  error

	ejecutable  goto 116
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 117


state 74
	bloque_sentencias_ejecutables : BEGIN retorno . END  (22)

	END  shift 118
	.  error


state 75
	repeat_until : REPEAT UNTIL condicion .  (101)

	.  reduce 101


state 76
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL . condicion  (100)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 41
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 43
	constante  goto 44
	termino  goto 45
	factor  goto 46
	condicion  goto 119


state 77
	repeat_until : REPEAT bloque_sentencias_ejecutables condicion .  (102)

	.  reduce 102


state 78
	factor : ID '{' . constante '}'  (63)

	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	constante  goto 120


state 79
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' . lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (81)
	condicion : '(' '(' . lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (82)
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (84)
	condicion : '(' '(' . lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' . lista_exp_arit ')' ')'  (89)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 122
	factor  goto 46


state 80
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	lista_exp_arit : exp_arit .  (55)
	condicion : '(' exp_arit . comparador exp_arit ')'  (79)
	condicion : '(' exp_arit . comparador exp_arit  (86)
	condicion : '(' exp_arit . exp_arit ')'  (87)

	MENORIGUAL  shift 82
	ID  shift 37
	DISTINTO  shift 83
	MAYORIGUAL  shift 84
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'+'  shift 85
	'-'  shift 86
	'='  shift 87
	'>'  shift 88
	'<'  shift 89
	','  reduce 55
	')'  reduce 55

	invocacion_fun  goto 42
	exp_arit  goto 123
	constante  goto 44
	termino  goto 45
	factor  goto 46
	comparador  goto 124


state 81
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (83)

	','  shift 125
	')'  shift 126
	.  error


state 82
	comparador : MENORIGUAL .  (91)

	.  reduce 91


state 83
	comparador : DISTINTO .  (92)

	.  reduce 92


state 84
	comparador : MAYORIGUAL .  (90)

	.  reduce 90


state 85
	exp_arit : exp_arit '+' . termino  (50)
	exp_arit : exp_arit '+' . error ';'  (52)

	error  shift 127
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	termino  goto 128
	factor  goto 46


state 86
	exp_arit : exp_arit '-' . termino  (51)
	exp_arit : exp_arit '-' . error ';'  (53)

	error  shift 129
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	termino  goto 130
	factor  goto 46


state 87
	comparador : '=' .  (93)

	.  reduce 93


state 88
	comparador : '>' .  (94)

	.  reduce 94


state 89
	comparador : '<' .  (95)

	.  reduce 95


state 90
	condicion : exp_arit comparador . exp_arit ')'  (85)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 131
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 91
	termino : termino '/' . factor  (58)
	termino : termino '/' . error ';'  (61)

	error  shift 132
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	factor  goto 133


state 92
	termino : termino '*' . factor  (57)
	termino : termino '*' . error ';'  (60)

	error  shift 134
	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	constante  goto 44
	factor  goto 135


state 93
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables  (74)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (75)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (76)
	sentencia_if : IF condicion THEN . END_IF  (77)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE END_IF  (78)

	BEGIN  shift 34
	END_IF  shift 136
	.  error

	bloque_sentencias_ejecutables  goto 137


state 94
	programa : ID BEGIN conjunto_sentencias END . ';'  (1)

	';'  shift 138
	.  error


state 95
	salida : OUTF '(' error . ')'  (99)

	')'  shift 139
	.  error


state 96
	salida : OUTF '(' MULTILINEA . ')'  (96)

	')'  shift 140
	.  error


state 97
	salida : OUTF '(' ')' .  (98)

	.  reduce 98


state 98
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	salida : OUTF '(' exp_arit . ") "  (97)

	'+'  shift 85
	'-'  shift 86
	") "  shift 141
	.  error


state 99
	def_triple : TYPEDEF tipo_compuesto '<' . tipo '>' ID  (103)

	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 142


state 100
	goto : GOTO error ';' .  (106)

	.  reduce 106


state 101
	etiqueta : ID '@' .  (66)

	.  reduce 66


state 102
	programa : ID conjunto_sentencias END ';' .  (3)

	.  reduce 3


state 103
	conjunto_sentencias : conjunto_sentencias declarativa ';' .  (10)

	.  reduce 10


state 104
	conjunto_sentencias : conjunto_sentencias ejecutable ';' .  (12)

	.  reduce 12


state 105
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN cuerpoFun END  (38)
	declaracionFun : tipo FUN ID . '(' ')' BEGIN cuerpoFun END  (40)

	'('  shift 143
	.  error


state 106
	declaracionFun : tipo FUN '(' . parametro ')' BEGIN cuerpoFun END  (39)

	ID  shift 144
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 145
	parametro  goto 146


state 107
	programa : BEGIN conjunto_sentencias END ';' .  (2)

	.  reduce 2


state 108
	invocacion_fun : ID '(' tipo '(' . exp_arit ')' ')'  (71)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 147
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 109
	invocacion_fun : ID '(' exp_arit ')' .  (70)

	.  reduce 70


state 110
	asig : ID '{' constante '}' . ASIGNACION exp_arit  (49)

	ASIGNACION  shift 148
	.  error


state 111
	lista_var : lista_var ',' ID .  (34)

	.  reduce 34


state 112
	retorno : error '(' . exp_arit ')' ';'  (47)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 149
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 113
	retorno : RET '(' . exp_arit ')' ';'  (46)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 150
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 114
	sentencias_ejecutables : ejecutable ';' .  (23)

	.  reduce 23


state 115
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END .  (20)

	.  reduce 20


state 116
	sentencias_ejecutables : sentencias_ejecutables ejecutable . ';'  (24)
	sentencias_ejecutables : sentencias_ejecutables ejecutable .  (26)

	';'  shift 151
	error  reduce 26
	ID  reduce 26
	REPEAT  reduce 26
	IF  reduce 26
	END  reduce 26
	OUTF  reduce 26
	RET  reduce 26
	GOTO  reduce 26


state 117
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno . END  (21)

	END  shift 152
	.  error


state 118
	bloque_sentencias_ejecutables : BEGIN retorno END .  (22)

	.  reduce 22


state 119
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion .  (100)

	.  reduce 100


state 120
	factor : ID '{' constante . '}'  (63)

	'}'  shift 153
	.  error


state 121
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	lista_exp_arit : exp_arit .  (55)

	'+'  shift 85
	'-'  shift 86
	MENORIGUAL  reduce 55
	DISTINTO  reduce 55
	MAYORIGUAL  reduce 55
	','  reduce 55
	')'  reduce 55
	'='  reduce 55
	'>'  reduce 55
	'<'  reduce 55


state 122
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit . comparador '(' lista_exp_arit ')' ')'  (81)
	condicion : '(' '(' lista_exp_arit . ')' comparador lista_exp_arit ')' ')'  (82)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')'  (84)
	condicion : '(' '(' lista_exp_arit . ')' '(' lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' lista_exp_arit . ')' ')'  (89)

	MENORIGUAL  shift 82
	DISTINTO  shift 83
	MAYORIGUAL  shift 84
	','  shift 125
	')'  shift 154
	'='  shift 87
	'>'  shift 88
	'<'  shift 89
	.  error

	comparador  goto 155


state 123
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : '(' exp_arit exp_arit . ')'  (87)

	'+'  shift 85
	'-'  shift 86
	')'  shift 156
	.  error


state 124
	condicion : '(' exp_arit comparador . exp_arit ')'  (79)
	condicion : '(' exp_arit comparador . exp_arit  (86)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 157
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 125
	lista_exp_arit : lista_exp_arit ',' . exp_arit  (56)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 158
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 126
	condicion : '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (83)

	MENORIGUAL  shift 82
	DISTINTO  shift 83
	MAYORIGUAL  shift 84
	'='  shift 87
	'>'  shift 88
	'<'  shift 89
	.  error

	comparador  goto 159


state 127
	exp_arit : exp_arit '+' error . ';'  (52)

	';'  shift 160
	.  error


state 128
	exp_arit : exp_arit '+' termino .  (50)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)
	termino : termino . '*' error ';'  (60)
	termino : termino . '/' error ';'  (61)

	'/'  shift 91
	'*'  shift 92
	$end  reduce 50
	error  reduce 50
	MENORIGUAL  reduce 50
	ID  reduce 50
	DISTINTO  reduce 50
	MAYORIGUAL  reduce 50
	SINGLE_CONSTANTE  reduce 50
	ENTERO_UNSIGNED  reduce 50
	OCTAL  reduce 50
	REPEAT  reduce 50
	IF  reduce 50
	THEN  reduce 50
	END  reduce 50
	OUTF  reduce 50
	TYPEDEF  reduce 50
	RET  reduce 50
	GOTO  reduce 50
	TIPO_UNSIGNED  reduce 50
	TIPO_SINGLE  reduce 50
	TIPO_OCTAL  reduce 50
	'+'  reduce 50
	'-'  reduce 50
	';'  reduce 50
	','  reduce 50
	')'  reduce 50
	'='  reduce 50
	'>'  reduce 50
	'<'  reduce 50
	") "  reduce 50


state 129
	exp_arit : exp_arit '-' error . ';'  (53)

	';'  shift 161
	.  error


state 130
	exp_arit : exp_arit '-' termino .  (51)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)
	termino : termino . '*' error ';'  (60)
	termino : termino . '/' error ';'  (61)

	'/'  shift 91
	'*'  shift 92
	$end  reduce 51
	error  reduce 51
	MENORIGUAL  reduce 51
	ID  reduce 51
	DISTINTO  reduce 51
	MAYORIGUAL  reduce 51
	SINGLE_CONSTANTE  reduce 51
	ENTERO_UNSIGNED  reduce 51
	OCTAL  reduce 51
	REPEAT  reduce 51
	IF  reduce 51
	THEN  reduce 51
	END  reduce 51
	OUTF  reduce 51
	TYPEDEF  reduce 51
	RET  reduce 51
	GOTO  reduce 51
	TIPO_UNSIGNED  reduce 51
	TIPO_SINGLE  reduce 51
	TIPO_OCTAL  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	';'  reduce 51
	','  reduce 51
	')'  reduce 51
	'='  reduce 51
	'>'  reduce 51
	'<'  reduce 51
	") "  reduce 51


state 131
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : exp_arit comparador exp_arit . ')'  (85)

	'+'  shift 85
	'-'  shift 86
	')'  shift 162
	.  error


state 132
	termino : termino '/' error . ';'  (61)

	';'  shift 163
	.  error


state 133
	termino : termino '/' factor .  (58)

	.  reduce 58


state 134
	termino : termino '*' error . ';'  (60)

	';'  shift 164
	.  error


state 135
	termino : termino '*' factor .  (57)

	.  reduce 57


state 136
	sentencia_if : IF condicion THEN END_IF .  (77)

	.  reduce 77


state 137
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . END_IF  (73)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables .  (74)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables END_IF  (75)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables  (76)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE END_IF  (78)

	ELSE  shift 165
	END_IF  shift 166
	$end  reduce 74
	error  reduce 74
	ID  reduce 74
	REPEAT  reduce 74
	IF  reduce 74
	END  reduce 74
	OUTF  reduce 74
	TYPEDEF  reduce 74
	RET  reduce 74
	GOTO  reduce 74
	TIPO_UNSIGNED  reduce 74
	TIPO_SINGLE  reduce 74
	TIPO_OCTAL  reduce 74
	';'  reduce 74


state 138
	programa : ID BEGIN conjunto_sentencias END ';' .  (1)

	.  reduce 1


state 139
	salida : OUTF '(' error ')' .  (99)

	.  reduce 99


state 140
	salida : OUTF '(' MULTILINEA ')' .  (96)

	.  reduce 96


state 141
	salida : OUTF '(' exp_arit ") " .  (97)

	.  reduce 97


state 142
	def_triple : TYPEDEF tipo_compuesto '<' tipo . '>' ID  (103)

	'>'  shift 167
	.  error


state 143
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN cuerpoFun END  (38)
	declaracionFun : tipo FUN ID '(' . ')' BEGIN cuerpoFun END  (40)

	ID  shift 144
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 168
	.  error

	tipo  goto 145
	parametro  goto 169


state 144
	parametro : ID .  (43)

	.  reduce 43


state 145
	parametro : tipo . ID  (41)
	parametro : tipo .  (42)

	ID  shift 170
	')'  reduce 42


state 146
	declaracionFun : tipo FUN '(' parametro . ')' BEGIN cuerpoFun END  (39)

	')'  shift 171
	.  error


state 147
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	invocacion_fun : ID '(' tipo '(' exp_arit . ')' ')'  (71)

	'+'  shift 85
	'-'  shift 86
	')'  shift 172
	.  error


state 148
	asig : ID '{' constante '}' ASIGNACION . exp_arit  (49)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 173
	constante  goto 44
	termino  goto 45
	factor  goto 46


state 149
	retorno : error '(' exp_arit . ')' ';'  (47)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 85
	'-'  shift 86
	')'  shift 174
	.  error


state 150
	retorno : RET '(' exp_arit . ')' ';'  (46)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 85
	'-'  shift 86
	')'  shift 175
	.  error


state 151
	sentencias_ejecutables : sentencias_ejecutables ejecutable ';' .  (24)

	.  reduce 24


state 152
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno END .  (21)

	.  reduce 21


state 153
	factor : ID '{' constante '}' .  (63)

	.  reduce 63


state 154
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' . comparador lista_exp_arit ')' ')'  (82)
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')'  (84)
	condicion : '(' '(' lista_exp_arit ')' . '(' lista_exp_arit ')' ')'  (88)
	condicion : '(' '(' lista_exp_arit ')' . ')'  (89)

	MENORIGUAL  shift 82
	DISTINTO  shift 83
	MAYORIGUAL  shift 84
	'('  shift 176
	')'  shift 177
	'='  shift 87
	'>'  shift 88
	'<'  shift 89
	.  error

	comparador  goto 178


state 155
	condicion : '(' '(' lista_exp_arit comparador . '(' lista_exp_arit ')' ')'  (81)

	'('  shift 179
	.  error


state 156
	condicion : '(' exp_arit exp_arit ')' .  (87)

	.  reduce 87


state 157
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	condicion : '(' exp_arit comparador exp_arit . ')'  (79)
	condicion : '(' exp_arit comparador exp_arit .  (86)

	'+'  shift 85
	'-'  shift 86
	')'  shift 180
	$end  reduce 86
	error  reduce 86
	ID  reduce 86
	REPEAT  reduce 86
	IF  reduce 86
	THEN  reduce 86
	END  reduce 86
	OUTF  reduce 86
	TYPEDEF  reduce 86
	RET  reduce 86
	GOTO  reduce 86
	TIPO_UNSIGNED  reduce 86
	TIPO_SINGLE  reduce 86
	TIPO_OCTAL  reduce 86
	';'  reduce 86


state 158
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)
	lista_exp_arit : lista_exp_arit ',' exp_arit .  (56)

	'+'  shift 85
	'-'  shift 86
	MENORIGUAL  reduce 56
	DISTINTO  reduce 56
	MAYORIGUAL  reduce 56
	','  reduce 56
	')'  reduce 56
	'='  reduce 56
	'>'  reduce 56
	'<'  reduce 56


state 159
	condicion : '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (83)

	'('  shift 181
	.  error


state 160
	exp_arit : exp_arit '+' error ';' .  (52)

	.  reduce 52


state 161
	exp_arit : exp_arit '-' error ';' .  (53)

	.  reduce 53


state 162
	condicion : exp_arit comparador exp_arit ')' .  (85)

	.  reduce 85


state 163
	termino : termino '/' error ';' .  (61)

	.  reduce 61


state 164
	termino : termino '*' error ';' .  (60)

	.  reduce 60


state 165
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables END_IF  (75)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables  (76)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . END_IF  (78)

	BEGIN  shift 34
	END_IF  shift 182
	.  error

	bloque_sentencias_ejecutables  goto 183


state 166
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF .  (73)

	.  reduce 73


state 167
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' . ID  (103)

	ID  shift 184
	.  error


state 168
	declaracionFun : tipo FUN ID '(' ')' . BEGIN cuerpoFun END  (40)

	BEGIN  shift 185
	.  error


state 169
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN cuerpoFun END  (38)

	')'  shift 186
	.  error


state 170
	parametro : tipo ID .  (41)

	.  reduce 41


state 171
	declaracionFun : tipo FUN '(' parametro ')' . BEGIN cuerpoFun END  (39)

	BEGIN  shift 187
	.  error


state 172
	invocacion_fun : ID '(' tipo '(' exp_arit ')' . ')'  (71)

	')'  shift 188
	.  error


state 173
	asig : ID '{' constante '}' ASIGNACION exp_arit .  (49)
	exp_arit : exp_arit . '+' termino  (50)
	exp_arit : exp_arit . '-' termino  (51)
	exp_arit : exp_arit . '+' error ';'  (52)
	exp_arit : exp_arit . '-' error ';'  (53)

	'+'  shift 85
	'-'  shift 86
	$end  reduce 49
	error  reduce 49
	ID  reduce 49
	REPEAT  reduce 49
	IF  reduce 49
	END  reduce 49
	OUTF  reduce 49
	TYPEDEF  reduce 49
	RET  reduce 49
	GOTO  reduce 49
	TIPO_UNSIGNED  reduce 49
	TIPO_SINGLE  reduce 49
	TIPO_OCTAL  reduce 49
	';'  reduce 49


state 174
	retorno : error '(' exp_arit ')' . ';'  (47)

	';'  shift 189
	.  error


state 175
	retorno : RET '(' exp_arit ')' . ';'  (46)

	';'  shift 190
	.  error


state 176
	condicion : '(' '(' lista_exp_arit ')' '(' . lista_exp_arit ')' ')'  (88)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 191
	factor  goto 46


state 177
	condicion : '(' '(' lista_exp_arit ')' ')' .  (89)

	.  reduce 89


state 178
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' comparador . lista_exp_arit ')' ')'  (82)
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')'  (84)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	'('  shift 192
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 193
	factor  goto 46


state 179
	condicion : '(' '(' lista_exp_arit comparador '(' . lista_exp_arit ')' ')'  (81)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 194
	factor  goto 46


state 180
	condicion : '(' exp_arit comparador exp_arit ')' .  (79)

	.  reduce 79


state 181
	condicion : '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (83)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 195
	factor  goto 46


state 182
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF .  (78)

	.  reduce 78


state 183
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables . END_IF  (75)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables .  (76)

	END_IF  shift 196
	$end  reduce 76
	error  reduce 76
	ID  reduce 76
	REPEAT  reduce 76
	IF  reduce 76
	END  reduce 76
	OUTF  reduce 76
	TYPEDEF  reduce 76
	RET  reduce 76
	GOTO  reduce 76
	TIPO_UNSIGNED  reduce 76
	TIPO_SINGLE  reduce 76
	TIPO_OCTAL  reduce 76
	';'  reduce 76


state 184
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID .  (103)

	.  reduce 103


state 185
	declaracionFun : tipo FUN ID '(' ')' BEGIN . cuerpoFun END  (40)

	error  shift 69
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 71
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 197
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 198
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	cuerpoFun  goto 199


state 186
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN cuerpoFun END  (38)

	BEGIN  shift 200
	.  error


state 187
	declaracionFun : tipo FUN '(' parametro ')' BEGIN . cuerpoFun END  (39)

	error  shift 69
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 71
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 197
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 198
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	cuerpoFun  goto 201


state 188
	invocacion_fun : ID '(' tipo '(' exp_arit ')' ')' .  (71)

	.  reduce 71


state 189
	retorno : error '(' exp_arit ')' ';' .  (47)

	.  reduce 47


state 190
	retorno : RET '(' exp_arit ')' ';' .  (46)

	.  reduce 46


state 191
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit . ')' ')'  (88)

	','  shift 125
	')'  shift 202
	.  error


state 192
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')'  (84)

	ID  shift 37
	SINGLE_CONSTANTE  shift 38
	ENTERO_UNSIGNED  shift 39
	OCTAL  shift 40
	.  error

	invocacion_fun  goto 42
	exp_arit  goto 121
	constante  goto 44
	termino  goto 45
	lista_exp_arit  goto 203
	factor  goto 46


state 193
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit . ')' ')'  (82)

	','  shift 125
	')'  shift 204
	.  error


state 194
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit . ')' ')'  (81)

	','  shift 125
	')'  shift 205
	.  error


state 195
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (83)

	','  shift 125
	')'  shift 206
	.  error


state 196
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF .  (75)

	.  reduce 75


state 197
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)
	cuerpoFun : conjunto_sentencias . retorno  (45)

	error  shift 69
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 71
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 56
	ejecutable  goto 57
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 207
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 198
	cuerpoFun : retorno .  (44)

	.  reduce 44


state 199
	declaracionFun : tipo FUN ID '(' ')' BEGIN cuerpoFun . END  (40)

	END  shift 208
	.  error


state 200
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . cuerpoFun END  (38)

	error  shift 69
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 71
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 197
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 198
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	cuerpoFun  goto 209


state 201
	declaracionFun : tipo FUN '(' parametro ')' BEGIN cuerpoFun . END  (39)

	END  shift 210
	.  error


state 202
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' . ')'  (88)

	')'  shift 211
	.  error


state 203
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')'  (84)

	','  shift 125
	')'  shift 212
	.  error


state 204
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' . ')'  (82)

	')'  shift 213
	.  error


state 205
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' . ')'  (81)

	')'  shift 214
	.  error


state 206
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (83)

	')'  shift 215
	.  error


state 207
	cuerpoFun : conjunto_sentencias retorno .  (45)

	.  reduce 45


state 208
	declaracionFun : tipo FUN ID '(' ')' BEGIN cuerpoFun END .  (40)

	.  reduce 40


state 209
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN cuerpoFun . END  (38)

	END  shift 216
	.  error


state 210
	declaracionFun : tipo FUN '(' parametro ')' BEGIN cuerpoFun END .  (39)

	.  reduce 39


state 211
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')' .  (88)

	.  reduce 88


state 212
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' .  (84)

	')'  shift 217
	$end  reduce 84
	error  reduce 84
	ID  reduce 84
	REPEAT  reduce 84
	IF  reduce 84
	THEN  reduce 84
	END  reduce 84
	OUTF  reduce 84
	TYPEDEF  reduce 84
	RET  reduce 84
	GOTO  reduce 84
	TIPO_UNSIGNED  reduce 84
	TIPO_SINGLE  reduce 84
	TIPO_OCTAL  reduce 84
	';'  reduce 84


state 213
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')' .  (82)

	.  reduce 82


state 214
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')' .  (81)

	.  reduce 81


state 215
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (83)

	.  reduce 83


state 216
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN cuerpoFun END .  (38)

	.  reduce 38


state 217
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (80)

	.  reduce 80


44 terminals, 31 nonterminals
107 grammar rules, 218 states
