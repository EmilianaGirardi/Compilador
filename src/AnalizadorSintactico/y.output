   0  $accept : programa $end

   1  programa : ID BEGIN conjunto_sentencias END ';'
   2           | BEGIN conjunto_sentencias END ';'
   3           | ID conjunto_sentencias END ';'
   4           | ID BEGIN conjunto_sentencias
   5           | ID conjunto_sentencias

   6  conjunto_sentencias : declarativa ';'
   7                      | declarativa
   8                      | ejecutable ';'
   9                      | ejecutable
  10                      | conjunto_sentencias declarativa ';'
  11                      | conjunto_sentencias declarativa
  12                      | conjunto_sentencias ejecutable ';'
  13                      | conjunto_sentencias ejecutable

  14  ejecutable : sentencia_if
  15             | invocacion_fun
  16             | asig
  17             | repeat_until
  18             | goto
  19             | salida

  20  bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END
  21                                | BEGIN sentencias_ejecutables retorno END
  22                                | BEGIN retorno END

  23  sentencias_ejecutables : ejecutable ';'
  24                         | sentencias_ejecutables ejecutable ';'
  25                         | ejecutable
  26                         | sentencias_ejecutables ejecutable

  27  declarativa : declaracionFun
  28              | declarvar
  29              | def_triple
  30              | declar_compuesto

  31  declarvar : tipo lista_var

  32  declar_compuesto : ID lista_var

  33  lista_var : ID
  34            | lista_var ',' ID
  35            | error ID

  36  tipo : TIPO_OCTAL
  37       | TIPO_UNSIGNED
  38       | TIPO_SINGLE

  39  declaracionFun : tipo FUN ID '(' parametro ')' BEGIN cuerpoFun END
  40                 | tipo FUN '(' parametro ')' BEGIN cuerpoFun END
  41                 | tipo FUN ID '(' ')' BEGIN cuerpoFun END

  42  parametro : tipo ID
  43            | tipo
  44            | ID

  45  cuerpoFun : retorno
  46            | conjunto_sentencias retorno

  47  retorno : RET '(' exp_arit ')' ';'
  48          | error '(' exp_arit ')' ';'

  49  asig : ID ASIGNACION exp_arit
  50       | ID '{' constante '}' ASIGNACION exp_arit

  51  exp_arit : exp_arit '+' termino
  52           | exp_arit '-' termino
  53           | error ';'
  54           | termino

  55  lista_exp_arit : exp_arit
  56                 | lista_exp_arit ',' exp_arit

  57  termino : termino '*' factor
  58          | termino '/' factor
  59          | factor
  60          | error factor

  61  factor : ID
  62         | ID '{' constante '}'
  63         | constante
  64         | invocacion_fun

  65  etiqueta : ID '@'

  66  constante : SINGLE_CONSTANTE
  67            | ENTERO_UNSIGNED
  68            | OCTAL

  69  invocacion_fun : ID '(' exp_arit ')'
  70                 | ID '(' tipo '(' exp_arit ')' ')'

  71  sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF
  72               | IF condicion THEN bloque_sentencias_ejecutables
  73               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF
  74               | IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables
  75               | IF condicion THEN END_IF
  76               | IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF

  77  condicion : '(' exp_arit comparador exp_arit ')'
  78            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  79            | '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'
  80            | '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'
  81            | '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'
  82            | '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'
  83            | exp_arit comparador exp_arit ')'
  84            | '(' exp_arit comparador exp_arit
  85            | '(' exp_arit exp_arit ')'
  86            | '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'

  87  comparador : MAYORIGUAL
  88             | MENORIGUAL
  89             | DISTINTO
  90             | '='
  91             | '>'
  92             | '<'

  93  salida : OUTF '(' MULTILINEA ')'
  94         | OUTF '(' exp_arit ") "
  95         | OUTF '(' ')'
  96         | OUTF '(' error ')'

  97  repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion
  98               | REPEAT UNTIL condicion
  99               | REPEAT bloque_sentencias_ejecutables condicion

 100  def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID

 101  tipo_compuesto : TRIPLE

 102  goto : GOTO etiqueta
 103       | GOTO error ';'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN conjunto_sentencias END ';'  (1)
	programa : ID . conjunto_sentencias END ';'  (3)
	programa : ID . BEGIN conjunto_sentencias  (4)
	programa : ID . conjunto_sentencias  (5)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	BEGIN  shift 7
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 14
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 2
	programa : BEGIN . conjunto_sentencias END ';'  (2)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 28
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	declar_compuesto : ID . lista_var  (32)
	asig : ID . ASIGNACION exp_arit  (49)
	asig : ID . '{' constante '}' ASIGNACION exp_arit  (50)
	invocacion_fun : ID . '(' exp_arit ')'  (69)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (70)

	error  shift 29
	ID  shift 30
	ASIGNACION  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	lista_var  goto 34


state 5
	repeat_until : REPEAT . bloque_sentencias_ejecutables UNTIL condicion  (97)
	repeat_until : REPEAT . UNTIL condicion  (98)
	repeat_until : REPEAT . bloque_sentencias_ejecutables condicion  (99)

	BEGIN  shift 35
	UNTIL  shift 36
	.  error

	bloque_sentencias_ejecutables  goto 37


state 6
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables END_IF  (71)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables  (72)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (74)
	sentencia_if : IF . condicion THEN END_IF  (75)
	sentencia_if : IF . condicion THEN bloque_sentencias_ejecutables ELSE END_IF  (76)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	'('  shift 43
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 45
	constante  goto 46
	termino  goto 47
	factor  goto 48
	condicion  goto 49


state 7
	programa : ID BEGIN . conjunto_sentencias END ';'  (1)
	programa : ID BEGIN . conjunto_sentencias  (4)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 50
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 8
	salida : OUTF . '(' MULTILINEA ')'  (93)
	salida : OUTF . '(' exp_arit ") "  (94)
	salida : OUTF . '(' ')'  (95)
	salida : OUTF . '(' error ')'  (96)

	'('  shift 51
	.  error


state 9
	def_triple : TYPEDEF . tipo_compuesto '<' tipo '>' ID  (100)

	TRIPLE  shift 52
	.  error

	tipo_compuesto  goto 53


state 10
	goto : GOTO . etiqueta  (102)
	goto : GOTO . error ';'  (103)

	error  shift 54
	ID  shift 55
	.  error

	etiqueta  goto 56


state 11
	tipo : TIPO_UNSIGNED .  (37)

	.  reduce 37


state 12
	tipo : TIPO_SINGLE .  (38)

	.  reduce 38


state 13
	tipo : TIPO_OCTAL .  (36)

	.  reduce 36


state 14
	programa : ID conjunto_sentencias . END ';'  (3)
	programa : ID conjunto_sentencias .  (5)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 57
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	$end  reduce 5

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 15
	conjunto_sentencias : declarativa . ';'  (6)
	conjunto_sentencias : declarativa .  (7)

	';'  shift 60
	$end  reduce 7
	error  reduce 7
	ID  reduce 7
	REPEAT  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	GOTO  reduce 7
	TIPO_UNSIGNED  reduce 7
	TIPO_SINGLE  reduce 7
	TIPO_OCTAL  reduce 7


state 16
	conjunto_sentencias : ejecutable . ';'  (8)
	conjunto_sentencias : ejecutable .  (9)

	';'  shift 61
	$end  reduce 9
	error  reduce 9
	ID  reduce 9
	REPEAT  reduce 9
	IF  reduce 9
	END  reduce 9
	OUTF  reduce 9
	TYPEDEF  reduce 9
	RET  reduce 9
	GOTO  reduce 9
	TIPO_UNSIGNED  reduce 9
	TIPO_SINGLE  reduce 9
	TIPO_OCTAL  reduce 9


state 17
	ejecutable : sentencia_if .  (14)

	.  reduce 14


state 18
	ejecutable : invocacion_fun .  (15)

	.  reduce 15


state 19
	ejecutable : asig .  (16)

	.  reduce 16


state 20
	ejecutable : repeat_until .  (17)

	.  reduce 17


state 21
	ejecutable : goto .  (18)

	.  reduce 18


state 22
	ejecutable : salida .  (19)

	.  reduce 19


state 23
	declarativa : declaracionFun .  (27)

	.  reduce 27


state 24
	declarativa : declarvar .  (28)

	.  reduce 28


state 25
	declarativa : def_triple .  (29)

	.  reduce 29


state 26
	declarativa : declar_compuesto .  (30)

	.  reduce 30


state 27
	declarvar : tipo . lista_var  (31)
	declaracionFun : tipo . FUN ID '(' parametro ')' BEGIN cuerpoFun END  (39)
	declaracionFun : tipo . FUN '(' parametro ')' BEGIN cuerpoFun END  (40)
	declaracionFun : tipo . FUN ID '(' ')' BEGIN cuerpoFun END  (41)

	error  shift 29
	ID  shift 30
	FUN  shift 62
	.  error

	lista_var  goto 63


state 28
	programa : BEGIN conjunto_sentencias . END ';'  (2)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 64
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 29
	lista_var : error . ID  (35)

	ID  shift 65
	.  error


state 30
	lista_var : ID .  (33)

	.  reduce 33


state 31
	asig : ID ASIGNACION . exp_arit  (49)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 66
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 32
	invocacion_fun : ID '(' . exp_arit ')'  (69)
	invocacion_fun : ID '(' . tipo '(' exp_arit ')' ')'  (70)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	invocacion_fun  goto 44
	tipo  goto 67
	exp_arit  goto 68
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 33
	asig : ID '{' . constante '}' ASIGNACION exp_arit  (50)

	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	constante  goto 69


state 34
	declar_compuesto : ID lista_var .  (32)
	lista_var : lista_var . ',' ID  (34)

	','  shift 70
	$end  reduce 32
	error  reduce 32
	ID  reduce 32
	REPEAT  reduce 32
	IF  reduce 32
	END  reduce 32
	OUTF  reduce 32
	TYPEDEF  reduce 32
	RET  reduce 32
	GOTO  reduce 32
	TIPO_UNSIGNED  reduce 32
	TIPO_SINGLE  reduce 32
	TIPO_OCTAL  reduce 32
	';'  reduce 32


state 35
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables END  (20)
	bloque_sentencias_ejecutables : BEGIN . sentencias_ejecutables retorno END  (21)
	bloque_sentencias_ejecutables : BEGIN . retorno END  (22)

	error  shift 71
	ID  shift 72
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	RET  shift 73
	GOTO  shift 10
	.  error

	ejecutable  goto 74
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	sentencias_ejecutables  goto 75
	retorno  goto 76


state 36
	repeat_until : REPEAT UNTIL . condicion  (98)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	'('  shift 43
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 45
	constante  goto 46
	termino  goto 47
	factor  goto 48
	condicion  goto 77


state 37
	repeat_until : REPEAT bloque_sentencias_ejecutables . UNTIL condicion  (97)
	repeat_until : REPEAT bloque_sentencias_ejecutables . condicion  (99)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	UNTIL  shift 78
	'('  shift 43
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 45
	constante  goto 46
	termino  goto 47
	factor  goto 48
	condicion  goto 79


state 38
	exp_arit : error . ';'  (53)
	termino : error . factor  (60)

	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	';'  shift 80
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	factor  goto 81


state 39
	factor : ID .  (61)
	factor : ID . '{' constante '}'  (62)
	invocacion_fun : ID . '(' exp_arit ')'  (69)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (70)

	'('  shift 32
	'{'  shift 82
	$end  reduce 61
	error  reduce 61
	MENORIGUAL  reduce 61
	ID  reduce 61
	DISTINTO  reduce 61
	MAYORIGUAL  reduce 61
	SINGLE_CONSTANTE  reduce 61
	ENTERO_UNSIGNED  reduce 61
	OCTAL  reduce 61
	REPEAT  reduce 61
	IF  reduce 61
	THEN  reduce 61
	END  reduce 61
	OUTF  reduce 61
	TYPEDEF  reduce 61
	RET  reduce 61
	GOTO  reduce 61
	TIPO_UNSIGNED  reduce 61
	TIPO_SINGLE  reduce 61
	TIPO_OCTAL  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	'/'  reduce 61
	'*'  reduce 61
	';'  reduce 61
	','  reduce 61
	')'  reduce 61
	'='  reduce 61
	'>'  reduce 61
	'<'  reduce 61
	") "  reduce 61


state 40
	constante : SINGLE_CONSTANTE .  (66)

	.  reduce 66


state 41
	constante : ENTERO_UNSIGNED .  (67)

	.  reduce 67


state 42
	constante : OCTAL .  (68)

	.  reduce 68


state 43
	condicion : '(' . exp_arit comparador exp_arit ')'  (77)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (78)
	condicion : '(' . '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' . '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (80)
	condicion : '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (81)
	condicion : '(' . '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (82)
	condicion : '(' . exp_arit comparador exp_arit  (84)
	condicion : '(' . exp_arit exp_arit ')'  (85)
	condicion : '(' . '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (86)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	'('  shift 83
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 84
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 85
	factor  goto 48


state 44
	factor : invocacion_fun .  (64)

	.  reduce 64


state 45
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	condicion : exp_arit . comparador exp_arit ')'  (83)

	MENORIGUAL  shift 86
	DISTINTO  shift 87
	MAYORIGUAL  shift 88
	'+'  shift 89
	'-'  shift 90
	'='  shift 91
	'>'  shift 92
	'<'  shift 93
	.  error

	comparador  goto 94


state 46
	factor : constante .  (63)

	.  reduce 63


state 47
	exp_arit : termino .  (54)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)

	'/'  shift 95
	'*'  shift 96
	$end  reduce 54
	error  reduce 54
	MENORIGUAL  reduce 54
	ID  reduce 54
	DISTINTO  reduce 54
	MAYORIGUAL  reduce 54
	SINGLE_CONSTANTE  reduce 54
	ENTERO_UNSIGNED  reduce 54
	OCTAL  reduce 54
	REPEAT  reduce 54
	IF  reduce 54
	THEN  reduce 54
	END  reduce 54
	OUTF  reduce 54
	TYPEDEF  reduce 54
	RET  reduce 54
	GOTO  reduce 54
	TIPO_UNSIGNED  reduce 54
	TIPO_SINGLE  reduce 54
	TIPO_OCTAL  reduce 54
	'+'  reduce 54
	'-'  reduce 54
	';'  reduce 54
	','  reduce 54
	')'  reduce 54
	'='  reduce 54
	'>'  reduce 54
	'<'  reduce 54
	") "  reduce 54


state 48
	termino : factor .  (59)

	.  reduce 59


state 49
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables END_IF  (71)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables  (72)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (74)
	sentencia_if : IF condicion . THEN END_IF  (75)
	sentencia_if : IF condicion . THEN bloque_sentencias_ejecutables ELSE END_IF  (76)

	THEN  shift 97
	.  error


state 50
	programa : ID BEGIN conjunto_sentencias . END ';'  (1)
	programa : ID BEGIN conjunto_sentencias .  (4)
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)

	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	END  shift 98
	OUTF  shift 8
	TYPEDEF  shift 9
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	$end  reduce 4

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 51
	salida : OUTF '(' . MULTILINEA ')'  (93)
	salida : OUTF '(' . exp_arit ") "  (94)
	salida : OUTF '(' . ')'  (95)
	salida : OUTF '(' . error ')'  (96)

	error  shift 99
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	MULTILINEA  shift 100
	')'  shift 101
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 102
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 52
	tipo_compuesto : TRIPLE .  (101)

	.  reduce 101


state 53
	def_triple : TYPEDEF tipo_compuesto . '<' tipo '>' ID  (100)

	'<'  shift 103
	.  error


state 54
	goto : GOTO error . ';'  (103)

	';'  shift 104
	.  error


state 55
	etiqueta : ID . '@'  (65)

	'@'  shift 105
	.  error


state 56
	goto : GOTO etiqueta .  (102)

	.  reduce 102


state 57
	programa : ID conjunto_sentencias END . ';'  (3)

	';'  shift 106
	.  error


state 58
	conjunto_sentencias : conjunto_sentencias declarativa . ';'  (10)
	conjunto_sentencias : conjunto_sentencias declarativa .  (11)

	';'  shift 107
	$end  reduce 11
	error  reduce 11
	ID  reduce 11
	REPEAT  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	GOTO  reduce 11
	TIPO_UNSIGNED  reduce 11
	TIPO_SINGLE  reduce 11
	TIPO_OCTAL  reduce 11


state 59
	conjunto_sentencias : conjunto_sentencias ejecutable . ';'  (12)
	conjunto_sentencias : conjunto_sentencias ejecutable .  (13)

	';'  shift 108
	$end  reduce 13
	error  reduce 13
	ID  reduce 13
	REPEAT  reduce 13
	IF  reduce 13
	END  reduce 13
	OUTF  reduce 13
	TYPEDEF  reduce 13
	RET  reduce 13
	GOTO  reduce 13
	TIPO_UNSIGNED  reduce 13
	TIPO_SINGLE  reduce 13
	TIPO_OCTAL  reduce 13


state 60
	conjunto_sentencias : declarativa ';' .  (6)

	.  reduce 6


state 61
	conjunto_sentencias : ejecutable ';' .  (8)

	.  reduce 8


state 62
	declaracionFun : tipo FUN . ID '(' parametro ')' BEGIN cuerpoFun END  (39)
	declaracionFun : tipo FUN . '(' parametro ')' BEGIN cuerpoFun END  (40)
	declaracionFun : tipo FUN . ID '(' ')' BEGIN cuerpoFun END  (41)

	ID  shift 109
	'('  shift 110
	.  error


state 63
	declarvar : tipo lista_var .  (31)
	lista_var : lista_var . ',' ID  (34)

	','  shift 70
	$end  reduce 31
	error  reduce 31
	ID  reduce 31
	REPEAT  reduce 31
	IF  reduce 31
	END  reduce 31
	OUTF  reduce 31
	TYPEDEF  reduce 31
	RET  reduce 31
	GOTO  reduce 31
	TIPO_UNSIGNED  reduce 31
	TIPO_SINGLE  reduce 31
	TIPO_OCTAL  reduce 31
	';'  reduce 31


state 64
	programa : BEGIN conjunto_sentencias END . ';'  (2)

	';'  shift 111
	.  error


state 65
	lista_var : error ID .  (35)

	.  reduce 35


state 66
	asig : ID ASIGNACION exp_arit .  (49)
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)

	'+'  shift 89
	'-'  shift 90
	$end  reduce 49
	error  reduce 49
	ID  reduce 49
	REPEAT  reduce 49
	IF  reduce 49
	END  reduce 49
	OUTF  reduce 49
	TYPEDEF  reduce 49
	RET  reduce 49
	GOTO  reduce 49
	TIPO_UNSIGNED  reduce 49
	TIPO_SINGLE  reduce 49
	TIPO_OCTAL  reduce 49
	';'  reduce 49


state 67
	invocacion_fun : ID '(' tipo . '(' exp_arit ')' ')'  (70)

	'('  shift 112
	.  error


state 68
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	invocacion_fun : ID '(' exp_arit . ')'  (69)

	'+'  shift 89
	'-'  shift 90
	')'  shift 113
	.  error


state 69
	asig : ID '{' constante . '}' ASIGNACION exp_arit  (50)

	'}'  shift 114
	.  error


state 70
	lista_var : lista_var ',' . ID  (34)

	ID  shift 115
	.  error


state 71
	retorno : error . '(' exp_arit ')' ';'  (48)

	'('  shift 116
	.  error


state 72
	asig : ID . ASIGNACION exp_arit  (49)
	asig : ID . '{' constante '}' ASIGNACION exp_arit  (50)
	invocacion_fun : ID . '(' exp_arit ')'  (69)
	invocacion_fun : ID . '(' tipo '(' exp_arit ')' ')'  (70)

	ASIGNACION  shift 31
	'('  shift 32
	'{'  shift 33
	.  error


state 73
	retorno : RET . '(' exp_arit ')' ';'  (47)

	'('  shift 117
	.  error


state 74
	sentencias_ejecutables : ejecutable . ';'  (23)
	sentencias_ejecutables : ejecutable .  (25)

	';'  shift 118
	error  reduce 25
	ID  reduce 25
	REPEAT  reduce 25
	IF  reduce 25
	END  reduce 25
	OUTF  reduce 25
	RET  reduce 25
	GOTO  reduce 25


state 75
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . END  (20)
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables . retorno END  (21)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable ';'  (24)
	sentencias_ejecutables : sentencias_ejecutables . ejecutable  (26)

	error  shift 71
	ID  shift 72
	REPEAT  shift 5
	IF  shift 6
	END  shift 119
	OUTF  shift 8
	RET  shift 73
	GOTO  shift 10
	.  error

	ejecutable  goto 120
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 121


state 76
	bloque_sentencias_ejecutables : BEGIN retorno . END  (22)

	END  shift 122
	.  error


state 77
	repeat_until : REPEAT UNTIL condicion .  (98)

	.  reduce 98


state 78
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL . condicion  (97)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	'('  shift 43
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 45
	constante  goto 46
	termino  goto 47
	factor  goto 48
	condicion  goto 123


state 79
	repeat_until : REPEAT bloque_sentencias_ejecutables condicion .  (99)

	.  reduce 99


state 80
	exp_arit : error ';' .  (53)

	.  reduce 53


state 81
	termino : error factor .  (60)

	.  reduce 60


state 82
	factor : ID '{' . constante '}'  (62)

	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	constante  goto 124


state 83
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')'  (78)
	condicion : '(' '(' . lista_exp_arit comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' . lista_exp_arit ')' comparador lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' . lista_exp_arit ')' comparador '(' lista_exp_arit ')'  (82)
	condicion : '(' '(' . lista_exp_arit ')' '(' lista_exp_arit ')' ')'  (86)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 125
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 126
	factor  goto 48


state 84
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	lista_exp_arit : exp_arit .  (55)
	condicion : '(' exp_arit . comparador exp_arit ')'  (77)
	condicion : '(' exp_arit . comparador exp_arit  (84)
	condicion : '(' exp_arit . exp_arit ')'  (85)

	error  shift 38
	MENORIGUAL  shift 86
	ID  shift 39
	DISTINTO  shift 87
	MAYORIGUAL  shift 88
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	'+'  shift 89
	'-'  shift 90
	'='  shift 91
	'>'  shift 92
	'<'  shift 93
	','  reduce 55
	')'  reduce 55

	invocacion_fun  goto 44
	exp_arit  goto 127
	constante  goto 46
	termino  goto 47
	factor  goto 48
	comparador  goto 128


state 85
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (81)

	','  shift 129
	')'  shift 130
	.  error


state 86
	comparador : MENORIGUAL .  (88)

	.  reduce 88


state 87
	comparador : DISTINTO .  (89)

	.  reduce 89


state 88
	comparador : MAYORIGUAL .  (87)

	.  reduce 87


state 89
	exp_arit : exp_arit '+' . termino  (51)

	error  shift 131
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	termino  goto 132
	factor  goto 48


state 90
	exp_arit : exp_arit '-' . termino  (52)

	error  shift 131
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	termino  goto 133
	factor  goto 48


state 91
	comparador : '=' .  (90)

	.  reduce 90


state 92
	comparador : '>' .  (91)

	.  reduce 91


state 93
	comparador : '<' .  (92)

	.  reduce 92


state 94
	condicion : exp_arit comparador . exp_arit ')'  (83)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 134
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 95
	termino : termino '/' . factor  (58)

	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	factor  goto 135


state 96
	termino : termino '*' . factor  (57)

	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	factor  goto 136


state 97
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables END_IF  (71)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables  (72)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables  (74)
	sentencia_if : IF condicion THEN . END_IF  (75)
	sentencia_if : IF condicion THEN . bloque_sentencias_ejecutables ELSE END_IF  (76)

	BEGIN  shift 35
	END_IF  shift 137
	.  error

	bloque_sentencias_ejecutables  goto 138


state 98
	programa : ID BEGIN conjunto_sentencias END . ';'  (1)

	';'  shift 139
	.  error


state 99
	exp_arit : error . ';'  (53)
	termino : error . factor  (60)
	salida : OUTF '(' error . ')'  (96)

	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	';'  shift 80
	')'  shift 140
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	factor  goto 81


state 100
	salida : OUTF '(' MULTILINEA . ')'  (93)

	')'  shift 141
	.  error


state 101
	salida : OUTF '(' ')' .  (95)

	.  reduce 95


state 102
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	salida : OUTF '(' exp_arit . ") "  (94)

	'+'  shift 89
	'-'  shift 90
	") "  shift 142
	.  error


state 103
	def_triple : TYPEDEF tipo_compuesto '<' . tipo '>' ID  (100)

	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 143


state 104
	goto : GOTO error ';' .  (103)

	.  reduce 103


state 105
	etiqueta : ID '@' .  (65)

	.  reduce 65


state 106
	programa : ID conjunto_sentencias END ';' .  (3)

	.  reduce 3


state 107
	conjunto_sentencias : conjunto_sentencias declarativa ';' .  (10)

	.  reduce 10


state 108
	conjunto_sentencias : conjunto_sentencias ejecutable ';' .  (12)

	.  reduce 12


state 109
	declaracionFun : tipo FUN ID . '(' parametro ')' BEGIN cuerpoFun END  (39)
	declaracionFun : tipo FUN ID . '(' ')' BEGIN cuerpoFun END  (41)

	'('  shift 144
	.  error


state 110
	declaracionFun : tipo FUN '(' . parametro ')' BEGIN cuerpoFun END  (40)

	ID  shift 145
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	tipo  goto 146
	parametro  goto 147


state 111
	programa : BEGIN conjunto_sentencias END ';' .  (2)

	.  reduce 2


state 112
	invocacion_fun : ID '(' tipo '(' . exp_arit ')' ')'  (70)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 148
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 113
	invocacion_fun : ID '(' exp_arit ')' .  (69)

	.  reduce 69


state 114
	asig : ID '{' constante '}' . ASIGNACION exp_arit  (50)

	ASIGNACION  shift 149
	.  error


state 115
	lista_var : lista_var ',' ID .  (34)

	.  reduce 34


state 116
	retorno : error '(' . exp_arit ')' ';'  (48)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 150
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 117
	retorno : RET '(' . exp_arit ')' ';'  (47)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 151
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 118
	sentencias_ejecutables : ejecutable ';' .  (23)

	.  reduce 23


state 119
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables END .  (20)

	.  reduce 20


state 120
	sentencias_ejecutables : sentencias_ejecutables ejecutable . ';'  (24)
	sentencias_ejecutables : sentencias_ejecutables ejecutable .  (26)

	';'  shift 152
	error  reduce 26
	ID  reduce 26
	REPEAT  reduce 26
	IF  reduce 26
	END  reduce 26
	OUTF  reduce 26
	RET  reduce 26
	GOTO  reduce 26


state 121
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno . END  (21)

	END  shift 153
	.  error


state 122
	bloque_sentencias_ejecutables : BEGIN retorno END .  (22)

	.  reduce 22


state 123
	repeat_until : REPEAT bloque_sentencias_ejecutables UNTIL condicion .  (97)

	.  reduce 97


state 124
	factor : ID '{' constante . '}'  (62)

	'}'  shift 154
	.  error


state 125
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	lista_exp_arit : exp_arit .  (55)

	'+'  shift 89
	'-'  shift 90
	MENORIGUAL  reduce 55
	DISTINTO  reduce 55
	MAYORIGUAL  reduce 55
	','  reduce 55
	')'  reduce 55
	'='  reduce 55
	'>'  reduce 55
	'<'  reduce 55


state 126
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')' ')'  (78)
	condicion : '(' '(' lista_exp_arit . comparador '(' lista_exp_arit ')' ')'  (79)
	condicion : '(' '(' lista_exp_arit . ')' comparador lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit . ')' comparador '(' lista_exp_arit ')'  (82)
	condicion : '(' '(' lista_exp_arit . ')' '(' lista_exp_arit ')' ')'  (86)

	MENORIGUAL  shift 86
	DISTINTO  shift 87
	MAYORIGUAL  shift 88
	','  shift 129
	')'  shift 155
	'='  shift 91
	'>'  shift 92
	'<'  shift 93
	.  error

	comparador  goto 156


state 127
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	condicion : '(' exp_arit exp_arit . ')'  (85)

	'+'  shift 89
	'-'  shift 90
	')'  shift 157
	.  error


state 128
	condicion : '(' exp_arit comparador . exp_arit ')'  (77)
	condicion : '(' exp_arit comparador . exp_arit  (84)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 158
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 129
	lista_exp_arit : lista_exp_arit ',' . exp_arit  (56)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 159
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 130
	condicion : '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (81)

	MENORIGUAL  shift 86
	DISTINTO  shift 87
	MAYORIGUAL  shift 88
	'='  shift 91
	'>'  shift 92
	'<'  shift 93
	.  error

	comparador  goto 160


state 131
	termino : error . factor  (60)

	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	constante  goto 46
	factor  goto 81


state 132
	exp_arit : exp_arit '+' termino .  (51)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)

	'/'  shift 95
	'*'  shift 96
	$end  reduce 51
	error  reduce 51
	MENORIGUAL  reduce 51
	ID  reduce 51
	DISTINTO  reduce 51
	MAYORIGUAL  reduce 51
	SINGLE_CONSTANTE  reduce 51
	ENTERO_UNSIGNED  reduce 51
	OCTAL  reduce 51
	REPEAT  reduce 51
	IF  reduce 51
	THEN  reduce 51
	END  reduce 51
	OUTF  reduce 51
	TYPEDEF  reduce 51
	RET  reduce 51
	GOTO  reduce 51
	TIPO_UNSIGNED  reduce 51
	TIPO_SINGLE  reduce 51
	TIPO_OCTAL  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	';'  reduce 51
	','  reduce 51
	')'  reduce 51
	'='  reduce 51
	'>'  reduce 51
	'<'  reduce 51
	") "  reduce 51


state 133
	exp_arit : exp_arit '-' termino .  (52)
	termino : termino . '*' factor  (57)
	termino : termino . '/' factor  (58)

	'/'  shift 95
	'*'  shift 96
	$end  reduce 52
	error  reduce 52
	MENORIGUAL  reduce 52
	ID  reduce 52
	DISTINTO  reduce 52
	MAYORIGUAL  reduce 52
	SINGLE_CONSTANTE  reduce 52
	ENTERO_UNSIGNED  reduce 52
	OCTAL  reduce 52
	REPEAT  reduce 52
	IF  reduce 52
	THEN  reduce 52
	END  reduce 52
	OUTF  reduce 52
	TYPEDEF  reduce 52
	RET  reduce 52
	GOTO  reduce 52
	TIPO_UNSIGNED  reduce 52
	TIPO_SINGLE  reduce 52
	TIPO_OCTAL  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	';'  reduce 52
	','  reduce 52
	')'  reduce 52
	'='  reduce 52
	'>'  reduce 52
	'<'  reduce 52
	") "  reduce 52


state 134
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	condicion : exp_arit comparador exp_arit . ')'  (83)

	'+'  shift 89
	'-'  shift 90
	')'  shift 161
	.  error


state 135
	termino : termino '/' factor .  (58)

	.  reduce 58


state 136
	termino : termino '*' factor .  (57)

	.  reduce 57


state 137
	sentencia_if : IF condicion THEN END_IF .  (75)

	.  reduce 75


state 138
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . END_IF  (71)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables .  (72)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables  (74)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables . ELSE END_IF  (76)

	ELSE  shift 162
	END_IF  shift 163
	$end  reduce 72
	error  reduce 72
	ID  reduce 72
	REPEAT  reduce 72
	IF  reduce 72
	END  reduce 72
	OUTF  reduce 72
	TYPEDEF  reduce 72
	RET  reduce 72
	GOTO  reduce 72
	TIPO_UNSIGNED  reduce 72
	TIPO_SINGLE  reduce 72
	TIPO_OCTAL  reduce 72
	';'  reduce 72


state 139
	programa : ID BEGIN conjunto_sentencias END ';' .  (1)

	.  reduce 1


state 140
	salida : OUTF '(' error ')' .  (96)

	.  reduce 96


state 141
	salida : OUTF '(' MULTILINEA ')' .  (93)

	.  reduce 93


state 142
	salida : OUTF '(' exp_arit ") " .  (94)

	.  reduce 94


state 143
	def_triple : TYPEDEF tipo_compuesto '<' tipo . '>' ID  (100)

	'>'  shift 164
	.  error


state 144
	declaracionFun : tipo FUN ID '(' . parametro ')' BEGIN cuerpoFun END  (39)
	declaracionFun : tipo FUN ID '(' . ')' BEGIN cuerpoFun END  (41)

	ID  shift 145
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	')'  shift 165
	.  error

	tipo  goto 146
	parametro  goto 166


state 145
	parametro : ID .  (44)

	.  reduce 44


state 146
	parametro : tipo . ID  (42)
	parametro : tipo .  (43)

	ID  shift 167
	')'  reduce 43


state 147
	declaracionFun : tipo FUN '(' parametro . ')' BEGIN cuerpoFun END  (40)

	')'  shift 168
	.  error


state 148
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	invocacion_fun : ID '(' tipo '(' exp_arit . ')' ')'  (70)

	'+'  shift 89
	'-'  shift 90
	')'  shift 169
	.  error


state 149
	asig : ID '{' constante '}' ASIGNACION . exp_arit  (50)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 170
	constante  goto 46
	termino  goto 47
	factor  goto 48


state 150
	retorno : error '(' exp_arit . ')' ';'  (48)
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)

	'+'  shift 89
	'-'  shift 90
	')'  shift 171
	.  error


state 151
	retorno : RET '(' exp_arit . ')' ';'  (47)
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)

	'+'  shift 89
	'-'  shift 90
	')'  shift 172
	.  error


state 152
	sentencias_ejecutables : sentencias_ejecutables ejecutable ';' .  (24)

	.  reduce 24


state 153
	bloque_sentencias_ejecutables : BEGIN sentencias_ejecutables retorno END .  (21)

	.  reduce 21


state 154
	factor : ID '{' constante '}' .  (62)

	.  reduce 62


state 155
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')' ')'  (78)
	condicion : '(' '(' lista_exp_arit ')' . comparador lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' . comparador '(' lista_exp_arit ')'  (82)
	condicion : '(' '(' lista_exp_arit ')' . '(' lista_exp_arit ')' ')'  (86)

	MENORIGUAL  shift 86
	DISTINTO  shift 87
	MAYORIGUAL  shift 88
	'('  shift 173
	'='  shift 91
	'>'  shift 92
	'<'  shift 93
	.  error

	comparador  goto 174


state 156
	condicion : '(' '(' lista_exp_arit comparador . '(' lista_exp_arit ')' ')'  (79)

	'('  shift 175
	.  error


state 157
	condicion : '(' exp_arit exp_arit ')' .  (85)

	.  reduce 85


state 158
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	condicion : '(' exp_arit comparador exp_arit . ')'  (77)
	condicion : '(' exp_arit comparador exp_arit .  (84)

	'+'  shift 89
	'-'  shift 90
	')'  shift 176
	$end  reduce 84
	error  reduce 84
	ID  reduce 84
	REPEAT  reduce 84
	IF  reduce 84
	THEN  reduce 84
	END  reduce 84
	OUTF  reduce 84
	TYPEDEF  reduce 84
	RET  reduce 84
	GOTO  reduce 84
	TIPO_UNSIGNED  reduce 84
	TIPO_SINGLE  reduce 84
	TIPO_OCTAL  reduce 84
	';'  reduce 84


state 159
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)
	lista_exp_arit : lista_exp_arit ',' exp_arit .  (56)

	'+'  shift 89
	'-'  shift 90
	MENORIGUAL  reduce 56
	DISTINTO  reduce 56
	MAYORIGUAL  reduce 56
	','  reduce 56
	')'  reduce 56
	'='  reduce 56
	'>'  reduce 56
	'<'  reduce 56


state 160
	condicion : '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (81)

	'('  shift 177
	.  error


state 161
	condicion : exp_arit comparador exp_arit ')' .  (83)

	.  reduce 83


state 162
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables END_IF  (73)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables  (74)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE . END_IF  (76)

	BEGIN  shift 35
	END_IF  shift 178
	.  error

	bloque_sentencias_ejecutables  goto 179


state 163
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables END_IF .  (71)

	.  reduce 71


state 164
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' . ID  (100)

	ID  shift 180
	.  error


state 165
	declaracionFun : tipo FUN ID '(' ')' . BEGIN cuerpoFun END  (41)

	BEGIN  shift 181
	.  error


state 166
	declaracionFun : tipo FUN ID '(' parametro . ')' BEGIN cuerpoFun END  (39)

	')'  shift 182
	.  error


state 167
	parametro : tipo ID .  (42)

	.  reduce 42


state 168
	declaracionFun : tipo FUN '(' parametro ')' . BEGIN cuerpoFun END  (40)

	BEGIN  shift 183
	.  error


state 169
	invocacion_fun : ID '(' tipo '(' exp_arit ')' . ')'  (70)

	')'  shift 184
	.  error


state 170
	asig : ID '{' constante '}' ASIGNACION exp_arit .  (50)
	exp_arit : exp_arit . '+' termino  (51)
	exp_arit : exp_arit . '-' termino  (52)

	'+'  shift 89
	'-'  shift 90
	$end  reduce 50
	error  reduce 50
	ID  reduce 50
	REPEAT  reduce 50
	IF  reduce 50
	END  reduce 50
	OUTF  reduce 50
	TYPEDEF  reduce 50
	RET  reduce 50
	GOTO  reduce 50
	TIPO_UNSIGNED  reduce 50
	TIPO_SINGLE  reduce 50
	TIPO_OCTAL  reduce 50
	';'  reduce 50


state 171
	retorno : error '(' exp_arit ')' . ';'  (48)

	';'  shift 185
	.  error


state 172
	retorno : RET '(' exp_arit ')' . ';'  (47)

	';'  shift 186
	.  error


state 173
	condicion : '(' '(' lista_exp_arit ')' '(' . lista_exp_arit ')' ')'  (86)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 125
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 187
	factor  goto 48


state 174
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')' ')'  (78)
	condicion : '(' '(' lista_exp_arit ')' comparador . lista_exp_arit ')' ')'  (80)
	condicion : '(' '(' lista_exp_arit ')' comparador . '(' lista_exp_arit ')'  (82)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	'('  shift 188
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 125
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 189
	factor  goto 48


state 175
	condicion : '(' '(' lista_exp_arit comparador '(' . lista_exp_arit ')' ')'  (79)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 125
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 190
	factor  goto 48


state 176
	condicion : '(' exp_arit comparador exp_arit ')' .  (77)

	.  reduce 77


state 177
	condicion : '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (81)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 125
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 191
	factor  goto 48


state 178
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE END_IF .  (76)

	.  reduce 76


state 179
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables . END_IF  (73)
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables .  (74)

	END_IF  shift 192
	$end  reduce 74
	error  reduce 74
	ID  reduce 74
	REPEAT  reduce 74
	IF  reduce 74
	END  reduce 74
	OUTF  reduce 74
	TYPEDEF  reduce 74
	RET  reduce 74
	GOTO  reduce 74
	TIPO_UNSIGNED  reduce 74
	TIPO_SINGLE  reduce 74
	TIPO_OCTAL  reduce 74
	';'  reduce 74


state 180
	def_triple : TYPEDEF tipo_compuesto '<' tipo '>' ID .  (100)

	.  reduce 100


state 181
	declaracionFun : tipo FUN ID '(' ')' BEGIN . cuerpoFun END  (41)

	error  shift 71
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 193
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 194
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	cuerpoFun  goto 195


state 182
	declaracionFun : tipo FUN ID '(' parametro ')' . BEGIN cuerpoFun END  (39)

	BEGIN  shift 196
	.  error


state 183
	declaracionFun : tipo FUN '(' parametro ')' BEGIN . cuerpoFun END  (40)

	error  shift 71
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 193
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 194
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	cuerpoFun  goto 197


state 184
	invocacion_fun : ID '(' tipo '(' exp_arit ')' ')' .  (70)

	.  reduce 70


state 185
	retorno : error '(' exp_arit ')' ';' .  (48)

	.  reduce 48


state 186
	retorno : RET '(' exp_arit ')' ';' .  (47)

	.  reduce 47


state 187
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit . ')' ')'  (86)

	','  shift 129
	')'  shift 198
	.  error


state 188
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')' ')'  (78)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' . lista_exp_arit ')'  (82)

	error  shift 38
	ID  shift 39
	SINGLE_CONSTANTE  shift 40
	ENTERO_UNSIGNED  shift 41
	OCTAL  shift 42
	.  error

	invocacion_fun  goto 44
	exp_arit  goto 125
	constante  goto 46
	termino  goto 47
	lista_exp_arit  goto 199
	factor  goto 48


state 189
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit . ')' ')'  (80)

	','  shift 129
	')'  shift 200
	.  error


state 190
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit . ')' ')'  (79)

	','  shift 129
	')'  shift 201
	.  error


state 191
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (81)

	','  shift 129
	')'  shift 202
	.  error


state 192
	sentencia_if : IF condicion THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF .  (73)

	.  reduce 73


state 193
	conjunto_sentencias : conjunto_sentencias . declarativa ';'  (10)
	conjunto_sentencias : conjunto_sentencias . declarativa  (11)
	conjunto_sentencias : conjunto_sentencias . ejecutable ';'  (12)
	conjunto_sentencias : conjunto_sentencias . ejecutable  (13)
	cuerpoFun : conjunto_sentencias . retorno  (46)

	error  shift 71
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	declarativa  goto 58
	ejecutable  goto 59
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 203
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27


state 194
	cuerpoFun : retorno .  (45)

	.  reduce 45


state 195
	declaracionFun : tipo FUN ID '(' ')' BEGIN cuerpoFun . END  (41)

	END  shift 204
	.  error


state 196
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN . cuerpoFun END  (39)

	error  shift 71
	ID  shift 4
	REPEAT  shift 5
	IF  shift 6
	OUTF  shift 8
	TYPEDEF  shift 9
	RET  shift 73
	GOTO  shift 10
	TIPO_UNSIGNED  shift 11
	TIPO_SINGLE  shift 12
	TIPO_OCTAL  shift 13
	.  error

	conjunto_sentencias  goto 193
	declarativa  goto 15
	ejecutable  goto 16
	sentencia_if  goto 17
	invocacion_fun  goto 18
	asig  goto 19
	repeat_until  goto 20
	goto  goto 21
	salida  goto 22
	retorno  goto 194
	declaracionFun  goto 23
	declarvar  goto 24
	def_triple  goto 25
	declar_compuesto  goto 26
	tipo  goto 27
	cuerpoFun  goto 205


state 197
	declaracionFun : tipo FUN '(' parametro ')' BEGIN cuerpoFun . END  (40)

	END  shift 206
	.  error


state 198
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' . ')'  (86)

	')'  shift 207
	.  error


state 199
	lista_exp_arit : lista_exp_arit . ',' exp_arit  (56)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')' ')'  (78)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit . ')'  (82)

	','  shift 129
	')'  shift 208
	.  error


state 200
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' . ')'  (80)

	')'  shift 209
	.  error


state 201
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' . ')'  (79)

	')'  shift 210
	.  error


state 202
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (81)

	')'  shift 211
	.  error


state 203
	cuerpoFun : conjunto_sentencias retorno .  (46)

	.  reduce 46


state 204
	declaracionFun : tipo FUN ID '(' ')' BEGIN cuerpoFun END .  (41)

	.  reduce 41


state 205
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN cuerpoFun . END  (39)

	END  shift 212
	.  error


state 206
	declaracionFun : tipo FUN '(' parametro ')' BEGIN cuerpoFun END .  (40)

	.  reduce 40


state 207
	condicion : '(' '(' lista_exp_arit ')' '(' lista_exp_arit ')' ')' .  (86)

	.  reduce 86


state 208
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' . ')'  (78)
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' .  (82)

	')'  shift 213
	$end  reduce 82
	error  reduce 82
	ID  reduce 82
	REPEAT  reduce 82
	IF  reduce 82
	THEN  reduce 82
	END  reduce 82
	OUTF  reduce 82
	TYPEDEF  reduce 82
	RET  reduce 82
	GOTO  reduce 82
	TIPO_UNSIGNED  reduce 82
	TIPO_SINGLE  reduce 82
	TIPO_OCTAL  reduce 82
	';'  reduce 82


state 209
	condicion : '(' '(' lista_exp_arit ')' comparador lista_exp_arit ')' ')' .  (80)

	.  reduce 80


state 210
	condicion : '(' '(' lista_exp_arit comparador '(' lista_exp_arit ')' ')' .  (79)

	.  reduce 79


state 211
	condicion : '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (81)

	.  reduce 81


state 212
	declaracionFun : tipo FUN ID '(' parametro ')' BEGIN cuerpoFun END .  (39)

	.  reduce 39


state 213
	condicion : '(' '(' lista_exp_arit ')' comparador '(' lista_exp_arit ')' ')' .  (78)

	.  reduce 78


44 terminals, 31 nonterminals
104 grammar rules, 214 states
